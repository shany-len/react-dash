{"version":3,"sources":["Components/Login/Login.js","sideNab.js","Components/Home/Cards.js","Components/Home/Lista.js","Components/Home/ListaUCOItem.js","Components/Home/ListaUC.js","Components/Home/Home.js","Components/cliente/ListaItem.js","Components/cliente/ListaItemSmall.js","Components/TransVentas/Pagination.js","Components/cliente/ListaCliente.js","Components/Proveedor/Proveedore.js","Components/Proveedor/ProveedoreSmall.js","Components/Proveedor/ListaProveedor.js","Components/Trabajadores/Trab.js","Components/avatar.jpg","Components/Trabajadores/TrabSmall.js","Components/Trabajadores/ListaTrabajadores.js","Components/TransVentas/VentaItem.js","Components/TransVentas/VentaItemSmall.js","Components/TransVentas/VentaList.js","Components/TransVentas/Venta.js","Components/TransCompras/CompraItem.js","Components/TransCompras/CompraList.js","Components/TransCompras/Compra.js","Components/Productos/product.png","Components/Productos/itemProductos.js","Components/Productos/itemProductLT.js","Components/Productos/ListaProd.js","Components/Productos/Productos.js","Components/bajoInventario/itemProductosBI.js","Components/bajoInventario/itemProductLTBI.js","Components/bajoInventario/ListaProdBI.js","Components/bajoInventario/ProductosBI.js","Components/Construccion/Contruccion.js","Components/Productos/ProdBase.js","Components/ReporteVenta/ReporteItemVenta.js","Components/ReporteVenta/ReporteVentaLista.js","Components/ReporteVenta/VG.js","Components/ReporteVenta/ReporteVenta.js","Components/Reportes/ReporteCompra.js","Components/Reportes/ReporteCliente.js","Components/Reportes/ReporteProductos.js","Components/perfil/timeline.js","Components/perfil/Paginacion.js","Components/perfil/TimelineNew.js","Components/perfil/Perfil.js","App.js","index.js"],"names":["TransitionLeft","props","Slide","direction","Login","getToken","getInicio","getDatos","getUrl","getSeed","useState","item","setItem","load","setLoad","mail","setMail","psw","setPsw","seed","setSeed","open","setOpen","openE","setOpenE","window","innerWidth","width","setWidth","data","setData","innerHeight","height","setHeight","updateDimensions","useEffect","a","axios","result","console","log","info","results","email","login","password","cantP","Math","round","random","inv","cliente","proveedores","cantBoleta","totalVenta","cantFact","totalCompra","clienteN","cantT","addEventListener","removeEventListener","fetchItems","className","style","fontSize","placeholder","color","type","value","onChange","e","m","target","required","p","textAlign","onClick","data-toggle","title","data-content","Snackbar","autoHideDuration","TransitionComponent","onClose","anchorOrigin","vertical","horizontal","Alert","severity","CircularProgress","Modal","setAppElement","Layout","location","pathname","token","setToken","inicio","setInicio","history","useHistory","toggleClass","useRef","msj1","setMsj1","msj2","setMsj2","msj3","setMsj3","msj4","setMsj4","datos","setDatos","count","setCount","modalIsOpen","setModalIsOpen","text","setText","url","setUrl","msj","id","titulo","tit","texto","useStyles","makeStyles","theme","modal","alignItems","justifyContent","backgroundColor","paper","position","marginLeft","border","marginTop","padding","overflow","handleClose","reason","classes","React","transform","openModal","push","ref","verticalAlign","to","textDecoration","href","data-parent","preventDefault","toggleNode","current","classList","toggle","toggleButton","data-target","aria-controls","aria-expanded","aria-label","Badge","badgeContent","Avatar","alt","src","picture","thumbnail","name","first","last","isOpen","shouldCloseOnEsc","shouldCloseOnOverlayClick","aria-labelledby","aria-describedby","float","eliminar","marginRight","children","b","c","d","u","s","Cards","elementos","paddingLeft","paddingTop","Divider","cantV","cantB","cantC","cantF","cantClient","clN","Lista","edit","setEdit","taskContent","i","check","a√±ad","anchorEl","setAnchorEl","forEach","element","onchange","indexOf","antCheck","cheM","splice","handleMenuItemClick","event","index","display","Button","aria-haspopup","currentTarget","keepMounted","Boolean","MenuItem","map","aniad","for","q","editarTarea","ListaUCOItem","elemento","handleClick","fact","fecha","empre","total","ListaUC","compare","cantA","split","fechaA","fechaB","comparison","today","Date","now","mes","getMonth","elem","empresa","String","fromCharCode","bol","tot","numeral","format","dia","getDate","getFullYear","valor","el","sort","Home","datosChart","setDatosChart","setElementos","useParams","valores","valoresStatic","etiq","v","f","n","t","ele","slice","cantProv","length","canvas","getHours","bas","label","gradient","getContext","createLinearGradient","addColorStop","labels","datasets","fill","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","pointHitRadiu7s","generadorDatos","document","createElement","options","scales","yAxes","ticks","beginAtZero","min","max","ListaItem","nombre","apellido","setid","matches","useMediaQuery","handleClickSB","maxHeight","phone","dirr","fe","direccion","phono","disabled","background","visibility","ListaItemSmall","Pagination","postsPerPage","totalPosts","nextPage","paginate","prevPage","currentPage","pageNumbers","ceil","ListaCliente","openB","setOpenB","openM","setOpenM","matches630","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","aniadidoArrow","setAniadidoArrow","nombreArrow","setNombreArrow","nameArrow","setNameArrow","empresaArrow","setEmpresaArrow","trabArrow","setTrabArrow","tipoArrow","setTipoArrow","registered","date","array1","tipoU","num","tipoUser","fech","fechita","usuarios","street","number","city","foto","large","tipo","handleCloseB","handleClickM","handleCloseM","compareAnia","eleA","eleB","compareName","compareEmpresa","compareTipo","ania","reverse","prov","emp","nameTrab","tipoA","borderRadius","pageNumber","Proveedores","avatar","trab","ProveedoresSmall","ListaProveedor","Proveedore","Trab","TrabSmall","ListaTrabajadores","VentaItem","total1","setTotal1","total2","setTotal2","Neto","setNeto","IVA","setIVA","numero","prod1Price","prod1Cant","prod2Price","prod2Cant","iba","toFixed","prod1","prod2","NclassNameName","VentaItemSmall","setT","VentaList","rand","clientes","itemC","setItemC","Load","dias","listaElementos","res","concat","boletaMes","idGroup","j","nc","id1","id2","cli","mesA","cant1","cant2","price","pag","Venta","setRandom","loading","setloading","setCliente","CompraItem","readonly","ComprasList","key","Compra","ItemProducto","costo","cant","cod","cost","image","alignSelf","ItemProductoLT","ListaProd","items","setValor","invTotal","precioInv","codArrow","setCodArrow","costoArrow","setCostoArrow","precioArrow","setPrecioArrow","existArrow","setExistArrow","cantEle","floor","extra","ite","imgUrl","title2","ite2","error","compareCod","compareCosto","compareCant","comparePrecio","precio","exist","alignContent","val","colSpan","fontWeight","Productos","ProductosBI","Construccion","ProdBase","setTexto","handleClick2","role","product","ItemVenta","ReporteVentaLista","overflowY","VG","totalV","setTotalV","totalG","setTotalG","promVenta","setPromVenta","margen","setMargen","from","ventasDia","setVentasDia","ventasProd","setVentasProd","ventasCat","setVentasCat","gananciasCat","setgananciasCat","ventasCatGrap","setVentasCatGrap","gananciasCatGrap","setGananciasCatGrap","optionsDonat2","legend","cat","listaP","c3","datosVentas","datosGanancias","suma","sumaG","g","datitos","maxV","listaV","listaG","listaC","labelsVCat","dataVCat","labelsGCat","dataGCat","por","a1","b2","gh","d4","minHeight","maintainAspectRatio","responsive","fontStyle","marginBottom","ReporteVenta","Loading","selectedDayRange","setSelectedDayRange","range","setRange","setDesde","setHasta","day","month","year","mI","dayI","fechas","mon","mesIni","fechasT","da","dayH","inputPlaceholder","maximumDate","utils","getToday","inputClassName","ReporteCompra","ReporteCliente","ReporteProductos","TimelinePerfil","setFechas","array2","Timeline","align","TimelineItem","TimelineOppositeContent","Typography","variant","TimelineSeparator","TimelineDot","TimelineConnector","Paginacion","TimelineNew","checked1","setChecked1","checked2","setChecked2","aa","Grow","in","action","Perfil","setName","web","setWeb","dir","setDir","setTipo","matches2","matche760","query","setTrab","Load2","setLoad2","trabTipo","setTrabTipo","querys","country","fetchItems2","trabajo","tar","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","x","y","rx","ry","aria-valuenow","aria-valuemin","aria-valuemax","username","cell","user","Tooltip","scrollTo","uuid","class","App","basename","process","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d2146c4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport './Login.css';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nconst Login = ({ getToken, getInicio, getDatos, getUrl, getSeed}) => {\r\n\r\n    const [item, setItem] = useState(null);\r\n    const [load, setLoad] = useState(false);\r\n    const [mail, setMail] = useState(\"\");\r\n    const [psw, setPsw] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openE, setOpenE] = useState(false);\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n    const [data, setData] = useState('');\r\n    const [height, setHeight] = useState(window.innerHeight);\r\n    const updateDimensions = () => {\r\n        setWidth(window.innerWidth);\r\n        setHeight(window.innerHeight);\r\n    }\r\n\r\n\r\n\r\n    const onChangeP = (p) => {\r\n        setPsw(p);\r\n    }\r\n    const onChangeE = (m) => {\r\n        setMail(m);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            if(item===null){\r\n                try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=1`\r\n                );\r\n                console.log(result.data.info.seed);\r\n                setItem(result.data.results[0]);\r\n                setMail(result.data.results[0].email);\r\n                setPsw(result.data.results[0].login.password);\r\n                setSeed(result.data.info.seed);\r\n\r\n                const cantP = Math.round(Math.random() * (90) + 20);\r\n                const inv = Math.round(162005 * cantP);\r\n                const cliente = Math.round(Math.random() * (90) + 15);\r\n                const proveedores = Math.round(Math.random() * (40) + 10);\r\n                const cantBoleta = Math.round(Math.random() * (350) + 50);\r\n                const totalVenta = Math.round(Math.random() * (1500000) + 500000);\r\n                const cantFact = Math.round(Math.random() * (200) + 50);\r\n                const totalCompra = Math.round(Math.random() * (800000) + 200000);\r\n                const clienteN = Math.round(Math.random() * (10) + 0);\r\n                const cantT = Math.round(Math.random() * (20) + 5);\r\n                const todo = \"p\" + cantP + \"i\" + inv + \"c\" + cliente + \"e\" + proveedores + \"b\" + cantBoleta + \"v\" + totalVenta + \"f\" + cantFact +\r\n                    \"m\" + totalCompra + \"n\" + clienteN + \"t\" + cantT + \"s\";\r\n                setData(todo);\r\n                setLoad(true);\r\n                window.addEventListener(\"resize\", updateDimensions);\r\n                return () => window.removeEventListener(\"resize\", updateDimensions);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }}\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (m, p) => {\r\n        console.log(\"M: \" + m + \" P: \" + p);\r\n        \r\n        if (item.email === m && item.login.password === p) {\r\n            getInicio(true);\r\n            getDatos(data);\r\n            getToken(item);\r\n            getSeed(seed);\r\n            getUrl(`/home/${data}`);\r\n            // getUrl(`/home/${data}`);\r\n\r\n        }\r\n        else if (m == '' || p == '') {\r\n            getInicio(true);\r\n            getToken(item);\r\n            getDatos(data);\r\n            getSeed(seed)\r\n            getUrl(`/home/${data}`);\r\n\r\n        }\r\n        else {\r\n            setOpenE(true);\r\n        }\r\n    }\r\n    if (load) {\r\n        return (\r\n            <>\r\n                <div className=\"main-bg\" style={{ height: `${height}`, width: `${width}`}}>\r\n                    <div className=\"login-container text-c animated flipInX\">\r\n                        <div>\r\n                            <h1 className=\"logo-badge text-whitesmoke\"><AccountCircleIcon style={{ fontSize: \"80px\" }} /></h1>\r\n                        </div>\r\n                        <h3 className=\"text-whitesmoke mb-4\">Inicio de sesi√≥n</h3>\r\n                        <div className=\"container-content\">\r\n                            <form className=\"margin-t\">\r\n                                <div className=\"form-group mb-4\" >\r\n                                    <input placeholder={item.email} style={{color:\"white\"}} type=\"email\" className=\"form-control\" value={mail} onChange={(e) => onChangeE(e.target.value)} required />\r\n                                </div>\r\n                                <div className=\"form-group mb-0\" >\r\n                                    <input placeholder={item.login.password} style={{color:\"white\"}} type=\"password\" className=\"form-control\" value={psw} onChange={(e) => onChangeP(e.target.value)} required />\r\n                                </div>\r\n                                <div className=\"mb-2\" style={{ textAlign: 'left' }}>\r\n                                <a className=\"text-darkyellow\"><small>¬øOlvidaste tu contrase√±a?</small></a>\r\n                                </div>\r\n                                <button type=\"submit\" className=\"form-button button-l margin-b\" onClick={() => handleChange(mail, psw)}>Iniciar sesi√≥n</button><br />\r\n                                <div style={{ textAlign: 'left' }}>\r\n                                    <p className=\"text-whitesmoke mb-0 mt-2\"><small>¬øNo tienes una cuenta?</small></p>\r\n                                    <a className=\"text-darkyellow mt-0 \" ><small>Registrate</small></a>\r\n                                    <div className=\"mt-2\" style={{ textAlign: \"right\" }}>\r\n                                        <a className=\"text-darkyellow\" data-toggle=\"popover\" title=\"Popover Header\" data-content=\"Prueba iniciando sesi√≥n con el usuario dado por el sistema\"><small>¬øNecesitas ayuda?</small></a>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={() => setOpen(false)} severity=\"error\">\r\n                        Presiona el boton iniciar sesi√≥n para ingresar o prueba ingresando datos al azar\r\n                                                                </Alert>\r\n                </Snackbar>\r\n                <Snackbar open={openE}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={() => setOpenE(false)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"centerE\"}\r\n                >\r\n\r\n                    <Alert onClose={() => setOpenE(false)} severity=\"error\">\r\n                        ¬°Error! Datos incorrectos\r\n                                                                </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport { Home as Casa, SettingsEthernetRounded} from '@material-ui/icons';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport ArrowDropDownOutlinedIcon from '@material-ui/icons/ArrowDropDownOutlined';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport DonutSmallIcon from '@material-ui/icons/DonutSmall';\r\nimport PieChartIcon from '@material-ui/icons/PieChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport Login from './Components/Login/Login';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Layout = (props) => {\r\n    console.log(\"pathname: \" + window.location.pathname);\r\n    const [token, setToken] = useState({});\r\n    const [inicio, setInicio] = useState(false);\r\n    let history = useHistory();\r\n    const toggleClass = useRef();\r\n    const [msj1, setMsj1] = useState(true);\r\n    const [msj2, setMsj2] = useState(true);\r\n    const [msj3, setMsj3] = useState(true);\r\n    const [msj4, setMsj4] = useState(true);\r\n    const [datos, setDatos] = useState('');\r\n    const [count, setCount] = useState(4);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [text, setText] = useState({});\r\n    const [open, setOpen] = useState(false);\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [url, setUrl] = useState('');\r\n    \r\n    const toggleButton = (e) => {\r\n        e.preventDefault();\r\n        const toggleNode = toggleClass.current;\r\n        toggleNode.classList.toggle('toggled');\r\n        console.log(toggleNode.classList.value);\r\n        // document.getElementById(\"wrapper\").classList.toggle('toggled');\r\n\r\n    }\r\n    useEffect(() => {\r\n       if(!(url===window.location.pathname)){\r\n           setUrl(window.location.pathname);\r\n       }\r\n    }, []);\r\n\r\n    const toggleOutside = () => {\r\n        /* const toggleNode = toggleClass.current;\r\n        if(!((toggleNode.classList.value).includes('toggled'))){\r\n            toggleNode.classList.toggle('toggled');\r\n        } */\r\n    }\r\n\r\n    const msj = [\r\n        {\r\n            id: 0,\r\n            titulo: \"Jhon Doe ha respondido tu mensaje\",\r\n            tit: \"Propuesta\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 1,\r\n            titulo: \"Janet Brown te ha enviado en mensaje\",\r\n            tit: \"Reporte de ventas\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 2,\r\n            titulo: \"Carla Mike te ha asignado la tarea 7\",\r\n            tit: \"subdividir y asignar al personal la realizacion de la tarea 7\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n        {\r\n            id: 3,\r\n            titulo: \"Michael Andrew report√≥ un error en la tarea 10\",\r\n            tit: \"Error en la ejecuci√≥n de la tarea 10\",\r\n            texto: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas elementum rutrum blandit. Donec vel pulvinar risus. Curabitur eleifend porta ullamcorper. Vivamus diam neque, pharetra et pharetra quis, volutpat eget elit. Aenean eu lectus et est volutpat pretium. Duis quam nisi, fringilla non aliquet et, rhoncus et metus. Integer hendrerit vehicula mattis. Phasellus rutrum ante a quam volutpat viverra. Cras turpis eros, tincidunt ac est vitae, molestie condimentum nulla. Nullam aliquam lobortis pulvinar. Nullam congue ac libero ac congue. Nam luctus libero in eros finibus sodales \\n Maecenas vitae cursus turpis. Proin et ante ac leo pretium interdum. Phasellus purus orci, porta at urna porttitor, dictum efficitur lectus. Duis egestas nisl eget arcu aliquam vestibulum. Nullam tincidunt non mi in elementum. Donec dictum ante a dui imperdiet rhoncus. Suspendisse ut turpis vel est luctus ultricies. Ut placerat vitae sem vel tincidunt.\"\r\n        },\r\n    ];\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            color: 'white'\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '2%',\r\n            padding: 'none',\r\n            overflow: 'hidden'\r\n        },\r\n    }));\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const classes = useStyles();\r\n\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const openModal = (id) => {\r\n        setText(msj[id]);\r\n        setModalIsOpen(true);\r\n\r\n    }\r\n\r\n    const cerrarSesion = () => {\r\n        // document.getElementById(\"sideNav\").style.display = \"none\";\r\n        setInicio(false);\r\n    }\r\n\r\n    const eliminar = (id) => {\r\n        setModalIsOpen(false);\r\n        let msjNode;\r\n        switch (id) {\r\n            case 0:\r\n                setMsj1(false);\r\n                break;\r\n            case 1:\r\n                setMsj2(false);\r\n                break;\r\n            case 2:\r\n                setMsj3(false);\r\n                break;\r\n            case 3:\r\n                setMsj4(false);\r\n                break;\r\n        }\r\n\r\n        //document.getElementById(id).style.display = \"none\";\r\n    }\r\n\r\n    if (!inicio) {\r\n        return <Login getToken={(b) => setToken(b)} getInicio={(c) => setInicio(c)} getDatos={(d) => setDatos(d)} getUrl={(u) => setUrl(u)} getSeed ={(s)=> setSeed(s)} />\r\n    }\r\n    else {\r\n        if(url===window.location.pathname){\r\n            history.push(url);\r\n            console.log(\"Actual: \"+ url);\r\n        }\r\n        else if(window.location.pathname==='/'){\r\n            history.push(url);\r\n            console.log(\"Actual: \"+ url);\r\n        }\r\n        else{\r\n            history.push(window.location.pathname);\r\n            console.log(\"Actual: \"+ window.location.pathname);\r\n        }\r\n        \r\n        return (\r\n            <div className='d-flex toggled' id=\"wrapper\" ref={toggleClass}>\r\n                <div className=\"\" id=\"sidebar-wrapper\">\r\n                    <div className=\"sidebar-heading\" style={{ verticalAlign: \"middle\", textAlign: \"center\" }}>Menu </div>\r\n                    <div className=\"list-group list-group-flush\">\r\n                        <Link to={`/home/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listNav text-white\"><Casa className=\"icon\" />Dashboard</span></Link>\r\n                        <div id=\"accordionTrans\" style={{border:\"none\"}}>\r\n                            <div className=\"card listNav \">\r\n                                <div className=\"card-header\">\r\n                                    <a className=\"card-link text-white\" data-toggle=\"collapse\" href=\"#collapseOne\">\r\n                                        <LocalAtmIcon className=\"icon\" />Transacciones <ArrowDropDownOutlinedIcon className=\"icon\" />\r\n                                    </a>\r\n                                </div>\r\n                                <div id=\"collapseOne\" className=\"collapse\" data-parent=\"#accordionTrans\">\r\n                                    <div className=\"card-body p-0\">\r\n\r\n                                        <Link to={`/transaccion/ventas/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><AttachMoneyIcon className=\"icon\" />Ventas</span></Link>\r\n                                        <Link to={`/transaccion/compras/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><AttachMoneyIcon className=\"icon\" />Compras</span></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"accordionCont\">\r\n                            <div className=\"card listNav \">\r\n                                <div className=\"card-header\">\r\n                                    <a className=\"card-link text-white\" data-toggle=\"collapse\" href=\"#collapseTwo\">\r\n                                        <ContactsIcon className=\"icon\" />Contactos <ArrowDropDownOutlinedIcon className=\"icon\" />\r\n                                    </a>\r\n                                </div>\r\n                                <div id=\"collapseTwo\" className=\"collapse\" data-parent=\"#accordionCont\">\r\n                                    <div className=\"card-body p-0\">\r\n                                        <Link to={`/contactos/cliente/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><AccountCircleIcon className=\"icon\" />Clientes</span></Link>\r\n                                        <Link to={`/contactos/proveedor/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><LocalShippingIcon className=\"icon\" />Proveedores</span></Link>\r\n                                        <Link to={`/contactos/trabajador/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><SupervisedUserCircleIcon className=\"icon\" />Trabajadores</span></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Link to={`/productos/${datos}`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listNav text-white\"><StorageIcon className=\"icon\" />Productos</span></Link>\r\n                        <div id=\"accordionReporte\">\r\n                            <div className=\"card listNav \">\r\n                                <div className=\"card-header\">\r\n                                    <a className=\"card-link text-white\" data-toggle=\"collapse\" href=\"#collapseThree\">\r\n                                        <TrendingUpIcon className=\"icon\" />Reportes <ArrowDropDownOutlinedIcon className=\"icon\" />\r\n                                    </a>\r\n                                </div>\r\n                                <div id=\"collapseThree\" className=\"collapse\" data-parent=\"#accordionReporte\">\r\n                                    <div className=\"card-body p-0\">\r\n                                        <Link to={`/reportes/venta`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><DonutSmallIcon className=\"icon\" />Resumen de ventas por periodo</span></Link>\r\n                                        <Link to={`/reportes/clientes`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><PieChartIcon className=\"icon\" />Reporte de ventas por cliente</span></Link>\r\n                                        <Link to={`/reportes/productos`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><BarChartIcon className=\"icon\" />Reporte de ventas por productos</span></Link>\r\n                                        <Link to={`/reportes/compra`} style={{ textDecoration: 'none' }}><span className=\"list-group-item list-group-item-action listAcord text-white\"><BarChartIcon className=\"icon\" />Reporte de compras</span></Link>\r\n                                    </div>\r\n                                </  div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"page-content-wrapper\" onClick={() => toggleOutside()}>\r\n\r\n                    <nav className=\"navbar navbar-expand-md\">\r\n                        <button className=\"btn\" id=\"menu-toggle\" onClick={(e) => toggleButton(e)}><MenuIcon style={{ color: \"white\", fontSize: \"45px\" }} /> </button>\r\n\r\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                            <AppsIcon style={{ color: \"white\", fontSize: \"45px\" }} />\r\n                        </button>\r\n\r\n                        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarSupportedContent\">\r\n                            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                                <li className=\"nav-item active dropdown dropleft\">\r\n                                    <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\" style={{ height: \"54px\", width: \"66px\" }} onClick={() => setCount(0)} >\r\n                                        <Badge badgeContent={count} color=\"secondary\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'left',\r\n                                            }}\r\n                                        >\r\n                                            <NotificationsIcon style={{ color: 'rgb(255,255,255)', height: \"35px\", width: \"35px\" }} />\r\n                                        </Badge>\r\n                                    </button>\r\n                                    <div className=\"dropdown-menu\">\r\n                                        <h6 className=\"dropdown-header\">Mensajes</h6>\r\n                                        {msj1 ? <p className=\"dropdown-item\" id=\"0\" onClick={() => openModal(0)}>{msj[0].titulo}</p> : null}\r\n                                        {msj2 ? <p className=\"dropdown-item\" id=\"1\" onClick={() => openModal(1)}>{msj[1].titulo}</p> : null}\r\n                                        <div className=\"dropdown-divider\"></div>\r\n                                        <h6 className=\"dropdown-header\" >Asignaciones</h6>\r\n                                        {msj3 ? <p className=\"dropdown-item\" id=\"2\" onClick={() => openModal(2)}>{msj[2].titulo}</p> : null}\r\n                                        {msj4 ? <p className=\"dropdown-item\" id=\"3\" onClick={() => openModal(3)}>{msj[3].titulo}</p> : null}\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"nav-item dropdown dropleft\">\r\n                                    <button type=\"button\" className=\"btn dropdown\" data-toggle=\"dropdown\">\r\n                                        <Avatar alt=\"Avatar\" src={token.picture.thumbnail} />\r\n                                    </button>\r\n                                    <div className=\"dropdown-menu\">\r\n                                        <h6 className=\"dropdown-header\">Datos</h6>\r\n                                        <p className=\"dropdown-item-text\">{token.name.first} {token.name.last} - Administrador</p>\r\n                                        <div className=\"dropdown-divider\"></div>\r\n                                        <h6 className=\"dropdown-header\">Acciones</h6>\r\n                                        <Link className=\"dropdown-item\" to={`/perfil/${seed}0`} style={{ textDecoration: 'none' }}><span>Perfil</span></Link>\r\n                                        <a className=\"dropdown-item\" onClick={() => cerrarSesion()}>Cerrar Sesi√≥n</a>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    <Snackbar open={open}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleClose(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                            no disponible en la version de prueba\r\n                                                    </Alert>\r\n                    </Snackbar>\r\n\r\n\r\n                    <Modal\r\n                        isOpen={modalIsOpen}\r\n                        shouldCloseOnEsc={true}\r\n                        shouldCloseOnOverlayClick={true}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        className={classes.modal}\r\n                    >\r\n                        <div className={classes.paper}>\r\n                            <header>\r\n                                <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                                <h4 className=\"h1T pt-3 ml-5 titleNavbar\" >Mensaje</h4>\r\n                            </header>\r\n                            <main>\r\n                                <div className=\"row texto ml-3\">\r\n                                    <div className=\"col-md-12 mt-3 \">\r\n                                        <h5 className=\"textNavbar\" >Titulo: </h5>\r\n                                        <p className=\"textNavbar\">{text.tit}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <h5 className=\"textNavbar\">Mensaje: </h5>\r\n                                        <p className=\"textNavbar\">{text.texto}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={classes.paper} className=\"row\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\" }} onClick={() => eliminar(text.id)}>Eliminar</button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-success ml-5 mt-3 mb-5\" style={{ float: \"right\", marginRight: \"10%\" }} onClick={() => handleClick()}>responder</button>\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n                    </Modal>\r\n\r\n                    <div className=\"container-fluid\">\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout;","import React from 'react';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst Cards = ({ elementos }) => {\r\n    return (\r\n        <>\r\n            <div className=\"card bg-primary text-white mb-1 mt-5\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                            <LocalOfferIcon style={{ fontSize: \"1em\"}} />\r\n                        </div>\r\n                        <div className=\"col-md-10 \">\r\n                            Inventario neto: <br></br>\r\n                        ${elementos.inv}\r\n                            <Divider />\r\n                            Stock: {elementos.cantP}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"card bg-success text-white mb-1\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\" }}>\r\n                            <MonetizationOnIcon style={{ fontSize: \"1em\" }} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            Total ventas hoy: <br></br>\r\n                        ${elementos.cantV}\r\n                            <Divider />\r\n                    Boletas hoy: {elementos.cantB}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"card bg-danger text-white mb-1\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\" }}>\r\n                            <ShoppingCartIcon style={{ fontSize: \"1em\" }} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            Total compras hoy: <br></br>\r\n                        ${elementos.cantC}\r\n                            <Divider />\r\n                    Compras hoy: {elementos.cantF}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"card bg-info text-white\">\r\n                <div className=\"card-body bd\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-2 alturaIcon\" style={{ paddingLeft: \"0\" }}>\r\n                            <PeopleAltIcon style={{ fontSize: \"1em\" }} />\r\n                        </div>\r\n                        <div className=\"col-md-10\">\r\n                            Clientes: <br></br>\r\n                            {elementos.cantClient}\r\n                            <Divider />\r\n                    Clientes nuevos: {elementos.clN}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect, useRef, createRef } from \"react\";\r\nimport axios from 'axios';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst Lista = () => {\r\n  const [item, setItem] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [edit, setEdit] = useState({});\r\n  const [text, setText] = useState('');\r\n  const taskContent = useRef();\r\n\r\n  useEffect(() => {\r\n    let a = [];\r\n    for (let i = 1; i < 7; i++) {\r\n      let c = {\r\n        id: i,\r\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam est elit\",\r\n        check: false,\r\n        a√±ad: \"A√±adido por: RandomUser\"\r\n      }\r\n      a.push(c);\r\n    }\r\n    setItem(a);\r\n  }, [])\r\n  \r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const editarTarea = () => {\r\n    let c = item;\r\n    c.forEach(element => {\r\n      if (element.id == edit.id) {\r\n        let i = c.indexOf(element);\r\n        console.log(element);\r\n        if (i !== -1) {\r\n          let cheM = {\r\n            id: element.id,\r\n            text: text,\r\n            check: element.check,\r\n            aniad: \"Editado por Jhon Doe \"\r\n          };\r\n          c.splice(i, 1, cheM);\r\n          setItem(c);\r\n          console.log(c);\r\n          setModalIsOpen(false);\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const openModal=(id)=>{\r\n    let c = item;\r\n    c.forEach(element =>{\r\n      if (element.id==id){\r\n        setEdit(element);\r\n        setText(element.text);\r\n        setModalIsOpen(true);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  onchange = (id) => {\r\n    let c = item;\r\n    c.forEach(element => {\r\n      if (element.id == id) {\r\n        let i = c.indexOf(element);\r\n        console.log(element);\r\n        let antCheck = !element.check;\r\n        let texto = element.text;\r\n        if (i !== -1) {\r\n          let cheM = {\r\n            id: id,\r\n            text: texto,\r\n            check: antCheck\r\n          };\r\n          c.splice(i, 1, cheM);\r\n          setItem(c);\r\n          console.log(c);\r\n          return 0;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    switch (index) {\r\n      case 0:\r\n        item.forEach(element => {\r\n          if (element.check) {\r\n            let i = element.id-1;\r\n            const taskNode = taskContent.current.children[i];\r\n            taskNode.style.backgroundColor='#17a2b8';\r\n          }\r\n        });\r\n        setAnchorEl(null);\r\n        break;\r\n      case 1:\r\n        item.forEach(element => {\r\n          if (element.check) {\r\n            let i = element.id-1;\r\n            const taskNode = taskContent.current.children[i];\r\n            taskNode.style.backgroundColor='#28a745';\r\n          }\r\n        });\r\n        setAnchorEl(null);\r\n        break;\r\n      case 2:\r\n        item.forEach(element => {\r\n          if (element.check) {\r\n            let i = element.id-1;\r\n            const taskNode = taskContent.current.children[i];\r\n            taskNode.style.display='none';\r\n          }\r\n        });\r\n        setAnchorEl(null);\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  const onChangeText = (q) =>{\r\n    setText(q);\r\n    \r\n}\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card-tasks card text-white cardHome\">\r\n        <div className=\"card-header\" style={{ padding: \"0\" }}>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-3\">\r\n              <h6 className=\"d-inline\" style={{ textAlign: \"left\", verticalAlign: \"middle\" }}>TASKS(5)</h6>\r\n            </div>\r\n            <div className=\"col-md-3 ml-auto\">\r\n              <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon style={{ color: \"white\" }} /></Button>\r\n              <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n\r\n              >\r\n                <MenuItem onClick={(event) => handleMenuItemClick(event, 0)}>Marcar como iniciada</MenuItem>\r\n                <MenuItem onClick={(event) => handleMenuItemClick(event, 1)}>Marcar como completada</MenuItem>\r\n                <MenuItem onClick={(event) => handleMenuItemClick(event, 2)}>Eliminar</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <table className=\"table text-white\">\r\n            <tbody  ref = {taskContent}>\r\n              {item.map((item, i) => (\r\n                <tr key={item.id} id={item.id} >\r\n                  <td className=\"page__toggle\">\r\n                    <label className=\"toggle\">\r\n                      <input className=\"toggle__input\" type=\"checkbox\"\r\n                        value={item.check}\r\n                        onClick={() => onchange(item.id)}\r\n                      />\r\n                      <span className=\"toggle__label\">\r\n\r\n                      </span>\r\n                    </label>\r\n                  </td>\r\n                  <td className=\"mb-0 mt-0\" style={{ padding: \"0\", paddingLeft: \"5\", textAlign: \"left\" }}>\r\n                    <h4 className=\"mb-0\" >Task-{item.id}</h4>\r\n                    <p className=\"mb-0\" >{item.text}</p>\r\n                    <p className=\"mb-0\" >{item.aniad}</p></td>\r\n                  <td style={{ verticalAlign: \"middle\" }}><EditIcon style={{ color: \"white\", fontSize: \"2.28em\" }} onClick={() => openModal(item.id)}/></td>\r\n                </tr>\r\n              ))}\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnEsc={true}\r\n        shouldCloseOnOverlayClick={false}\r\n        className=\"contenedorN\"\r\n      >\r\n        <div className=\"mt-3\">\r\n          <header>\r\n            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n            <h2 className=\"h1T pt-3\">Editar Tareas</h2>\r\n          </header>\r\n          <main>\r\n            <div className=\"col-md-8 mt-3\">\r\n              <div className=\"row texto\">\r\n                <div className=\"col-md-12 mt-3\">\r\n                <h4 className=\"mb-0\" >Task-{edit.id}</h4>\r\n                </div>\r\n                <div className=\"col-md-12 mt-3\">\r\n                  <label for=\"name\">Descripci√≥n: </label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"name\" \r\n                  value={text}\r\n                  onChange={(e) => onChangeText(e.target.value)}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n        <footer className=\"footer\">\r\n          <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => editarTarea()}>Guardar Cambios</button>\r\n        </footer>\r\n\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lista;","import React, {useEffect, useRef, useState} from 'react';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\nconst ListaUCOItem=({ item })=>{\r\n    const [open, setOpen] = useState(false);\r\n    const elemento = useRef();\r\n    \r\n\r\n    const borrar = () => {\r\n        const elementoNode = elemento.current;\r\n        elementoNode.style.display = 'none';\r\n        //document.getElementById(item.id).style.display = \"none\";\r\n        console.log(item.id);\r\n        setOpen(!open);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n  \r\n    return(\r\n        <>\r\n          <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleClose(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"info\">\r\n                                                        <h5>¬øRealmente quieres marcar el pedido como entregado?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClick()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n    <tr id={item.id} ref={elemento}>\r\n        <td>{item.fact}</td>\r\n        <td>{item.fecha}</td>\r\n        <td>{item.empre}</td>\r\n        <td>${item.total}</td>\r\n        <td className=\"tick\"><CheckCircleIcon style={{color:\"#99ffbb\"}} onClick={()=>handleClick()} /></td>\r\n\r\n      </tr>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default ListaUCOItem;","import React, { useState, useEffect } from \"react\";\r\nimport ListaUCOItem from './ListaUCOItem';\r\nimport numeral from 'numeral';\r\n\r\nconst ListaUC = () => {\r\n    const [item, setItem] = useState([]);\r\n\r\n    function compare(a, b) {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.fecha.split(\"/\");\r\n        const cantB = b.fecha.split(\"/\");\r\n        let fechaA = cantA[0];\r\n        let fechaB = cantB[0];\r\n        if (fechaA < 10) {\r\n            fechaA = '0' + fechaA;\r\n        }\r\n        if (fechaB < 10) {\r\n            fechaB = '0' + fechaB;\r\n        }\r\n        let comparison = 0;\r\n        if (fechaA > fechaB) {\r\n            comparison = 1;\r\n        } else if (fechaA < fechaB) {\r\n            comparison = -1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        const mes = today.getMonth() + 1\r\n        const elem = [];\r\n        for (let i = 0; i < 10; i++) {\r\n            const a = Math.round(Math.random() * (25) + 0);\r\n            let num = String.fromCharCode(65 + a);\r\n            const empresa = 'Empresa ' + num;\r\n            const bol = Math.round(Math.random() * (9000) + 1000);\r\n            const tot = numeral(Math.round(Math.random() * (90000) + 10000)).format(0, 0);\r\n            let dia = Math.round(Math.random() * (3) + 0) + today.getDate();\r\n            console.log(today.getDate() + \"/\" + mes + \"/\" + today.getFullYear());\r\n            const f = dia + \"/\" + mes + \"/\" + today.getFullYear();\r\n            let valor = {\r\n                id: i+\"A\",\r\n                fact: bol,\r\n                fecha: f,\r\n                empre: empresa,\r\n                total: tot\r\n            };\r\n            elem.push(valor);\r\n        }\r\n        const el = elem.sort(compare);\r\n        setItem(el);\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <table className=\"table table-bordered text-light\">\r\n            <thead className=\"cabecera\">\r\n                <tr>\r\n                    <th>N¬∞ Factura</th>\r\n                    <th>Fecha de entrega</th>\r\n                    <th>Empresa</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {item.map(item => (\r\n                    <ListaUCOItem key={item.id} item={item} />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ListaUC;","import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Cards from './Cards';\r\nimport Lista from './Lista';\r\nimport ListaUC from './ListaUC';\r\nimport {useParams} from 'react-router-dom';\r\n\r\n\r\nconst Home = () => {\r\n    const [datosChart, setDatosChart] = useState({});\r\n    const [elementos, setElementos] = useState({});\r\n    const {datos} = useParams();\r\n\r\n    const options = {\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        beginAtZero: false,\r\n                        min: 60000,\r\n                        max: 110000                    \r\n                        \r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    }\r\nconst valores = [100000, 70000, 90000, 75000, 85000, 70000, 95000, 80000, 90000, 100000, 75000];\r\nconst valoresStatic = [85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000, 85000];\r\nconst etiq =['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00'];\r\n    const generadorDatos = (canvas) => {\r\n        const today = new Date(Date.now());\r\n        console.log(today.getHours());\r\n        if (today.getHours() > 8 && today.getHours() < 19) {\r\n            let inicio = today.getHours()-8;\r\n            let datosChart = valores.slice(0, inicio);\r\n            let bas = valoresStatic.slice(0, inicio);\r\n            let label = etiq.slice(0, inicio);\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const gradient = ctx.createLinearGradient(0, 120, 0, 200);\r\n            gradient.addColorStop(0.25, 'rgba(29,140,248,0.5)');\r\n            gradient.addColorStop(0.63, 'rgb(39, 41, 61)');\r\n            gradient.addColorStop(0.85, 'rgb(39, 41, 61)');\r\n            console.log(label);\r\n            const dataChart = {\r\n                labels: label,\r\n                datasets: [\r\n                    {\r\n                        label: 'Ventas esperadas por hora',\r\n                        fill: false,\r\n                        borderColor: '#e14eca',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: '#ed92df',\r\n                        pointBackgroundColor: '#fbe9f9f',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: '#f8d3f2',\r\n                        pointHoverBorderColor: '#831673',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadius: 10,\r\n                        data: bas,\r\n                    },\r\n\r\n                    {\r\n                        label: 'Ventas hoy',\r\n                        fill: true,\r\n                        backgroundColor: gradient,\r\n                        borderColor: 'rgb(29,140,248)',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: 'rgb(29,140,248)',\r\n                        pointBackgroundColor: 'rgb(255,255,255)',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: 'rgb(255,255,255)',\r\n                        pointHoverBorderColor: 'rgb(29,140,248)',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadius: 10,\r\n                        data: datosChart\r\n\r\n                    }\r\n                ]\r\n            };\r\n            return dataChart;\r\n        }\r\n        else {\r\n            let datosChart = valores;\r\n            let bas = valoresStatic;\r\n            let label = etiq;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const gradient = ctx.createLinearGradient(0, 120, 0, 290);\r\n            gradient.addColorStop(0.3, 'rgba(29,140,248,0.5)');\r\n            gradient.addColorStop(0.8, 'rgba(39, 41, 61, 0.3)');\r\n            gradient.addColorStop(0.7, 'rgba(39, 41, 61,0.3)');\r\n            console.log(datosChart[0]);\r\n            const dataChart = {\r\n                labels: label,\r\n                datasets: [\r\n                    {\r\n                        label: 'Ventas esperadas por hora',\r\n                        fill: false,\r\n                        borderColor: '#e14eca',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: '#ed92df',\r\n                        pointBackgroundColor: '#fbe9f9f',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: '#f8d3f2',\r\n                        pointHoverBorderColor: '#831673',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadius: 10,\r\n                        data: bas,\r\n                    },\r\n\r\n                    {\r\n                        label: 'Ventas hoy',\r\n                        fill: true,\r\n                        backgroundColor: gradient,\r\n                        borderColor: 'rgba(29,140,248,0.7)',\r\n                        borderCapStyle: 'butt',\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0,\r\n                        borderJoinStyle: 'miter',\r\n                        pointBorderColor: 'rgb(29,140,248)',\r\n                        pointBackgroundColor: 'rgb(255,255,255)',\r\n                        pointBorderWidth: 1,\r\n                        pointHoverRadius: 3,\r\n                        pointHoverBackgroundColor: 'rgb(255,255,255)',\r\n                        pointHoverBorderColor: 'rgb(29,140,248)',\r\n                        pointHoverBorderWidth: 2,\r\n                        pointRadius: 3,\r\n                        pointHitRadiu7s: 10,\r\n                        data: datosChart\r\n\r\n                    }\r\n                ]\r\n            };\r\n            return dataChart;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        let p = datos.indexOf(\"p\");\r\n        let i = datos.indexOf(\"i\");\r\n        let c = datos.indexOf(\"c\");\r\n        let e = datos.indexOf(\"e\");\r\n        let b = datos.indexOf(\"b\");\r\n        let v = datos.indexOf(\"v\");\r\n        let f = datos.indexOf(\"f\");\r\n        let m = datos.indexOf(\"m\");\r\n        let n = datos.indexOf(\"n\");\r\n        let t = datos.indexOf(\"t\");\r\n     const ele = {\r\n                cantP: datos.slice(p+1,i),\r\n                inv: datos.slice(i+1,c),\r\n                cantClient: datos.slice(c+1,e),\r\n                cantProv: datos.slice(e+1,b),\r\n                cantB: datos.slice(b+1,v),\r\n                cantV: datos.slice(v+1,f),\r\n                cantF: datos.slice(f+1,m),\r\n                cantC: datos.slice(m+1,n),\r\n                clN: datos.slice(n+1,t),\r\n                cantT: datos.slice(t+1,datos.length)\r\n        }\r\n  \r\n        /* \r\n        p30 i4860150 c93 e34 b170 v1359637 f151 m939024 n2 t15\r\n\r\n        Cortar datos para asi obtener los valores necesarios\r\n        */\r\n       console.log(datos);\r\n        setElementos(ele);\r\n        console.log(ele)\r\n        const canvas = document.createElement('canvas');\r\n        const a = generadorDatos(canvas);\r\n        setDatosChart(a);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"contenedor text-light\">\r\n            <div className=\"row ml-3\">\r\n                <div className=\"col-lg-8 homeElement\">\r\n                    <h2 className=\"mt-3 ml-3 \">Ventas hoy</h2>\r\n                    <Line className=\"homeElement\" data={datosChart} options={options} />\r\n                </div>\r\n                <div className=\"col-lg-3 ml-auto mr-auto tarjetas\">\r\n                    <Cards elementos={elementos} />\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-4 ml-3\">\r\n                <div className=\"col-lg-5 mr-5 listaHome\">\r\n                    <h4 className=\"mt-4 mb-4\" >Tareas</h4>\r\n                    <Lista />\r\n                </div>\r\n                <div className=\"col-lg-6 listaHome \">\r\n                    <h4 className=\"mt-4 mb-4\">Insumos en camino</h4>\r\n                    <ListaUC />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst ListaItem = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const date = item.fecha;\r\n    const fecha = date.split('-');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            name: item.id + \" name\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\",\r\n            fe: fecha\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>{item.direccion}</td>\r\n                <td>mail: {item.mail} <br></br>\r\n                    telefono: {item.phono}\r\n                </td>\r\n                <td>{fecha[2]}/{fecha[1]}/{fecha[0]}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Editar Cliente</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.name}>Nombre: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.dirr}>Direcci√≥n: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.mail}>Mail: </label>\r\n                                <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.phone}>Telefono: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                            </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaItem;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst ListaItemSmall = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    \r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickSB = () => {\r\n    setOpen(!open);\r\n};\r\n\r\nconst handleCloseSB = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\nconst getModalStyle = () => {\r\n    const top = '15%';\r\n    const left = '15%'\r\n\r\n    return {\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor:\"transparent\"\r\n      },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '70%',\r\n        backgroundColor: 'rgb(39, 41, 61)',\r\n        marginLeft: '15%',\r\n        border: 'none',\r\n        marginTop: '5%',\r\n        padding: '0',\r\n        maxHeight:'100%',\r\n        overflow: 'scroll'    \r\n    },\r\n}));\r\n\r\nconst classes = useStyles();\r\n// getModalStyle is not a pure function, we roll the style only on the first render\r\nconst [modalStyle] = React.useState(getModalStyle);\r\n\r\n    useEffect(() => {\r\n      \r\n        setid({\r\n            id: item.id,\r\n            name: item.id + \" name\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\",\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n   \r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>mail: {item.mail}\r\n                </td>\r\n                <td>\r\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n              <MenuItem  onClick={()=>handleClickSB()}>Borrar</MenuItem>\r\n            </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleCloseSB(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"error\">\r\n                                                        <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClickSB()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Editar Cliente</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.name}>Nombre: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.dirr}>Direcci√≥n: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.mail}>Mail: </label>\r\n                                <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.phone}>Telefono: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled  style={{background: \"transparent\", color:\"white\"}}></input>\r\n                            </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaItemSmall;\r\n","import React from 'react';\r\n\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, nextPage, prevPage, currentPage }) => {\r\n    const pageNumbers = [];\r\n    let number = 1;\r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\nif(currentPage>1 && currentPage<pageNumbers.length){\r\n    return (\r\n        \r\n        <nav>\r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}>Anterior</button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\">{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}>Siguiente</button>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n            }\r\n    else {\r\n        if(currentPage==1){\r\n            return (\r\n        \r\n                <nav>\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        <li className=\"page-item\">\r\n                            <button className=\"btn page-link\" disabled>Anterior</button>\r\n                        </li>\r\n                        <li className=\"page-item\">\r\n                            <button className=\"btn page-link\">{currentPage}</button>\r\n                        </li>\r\n                        {/* {pageNumbers.map(num => (\r\n                            <li className=\"page-item\" key={num}>\r\n                                <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                            </li>\r\n                        ))} */}\r\n                        <li className=\"page-item\">\r\n                            <button className=\"btn page-link\" onClick={() => nextPage()}>Siguiente</button>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            );\r\n        }\r\n        else{\r\n            return (        \r\n                <nav>\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        <li className=\"page-item\">\r\n                            <button className=\"btn page-link\" onClick={() => prevPage()}>Anterior</button>\r\n                        </li>\r\n                        <li className=\"page-item\">\r\n                            <button className=\"btn page-link\">{currentPage}</button>\r\n                        </li>\r\n                        {/* {pageNumbers.map(num => (\r\n                            <li className=\"page-item\" key={num}>\r\n                                <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                            </li>\r\n                        ))} */}\r\n                        <li className=\"page-item\">\r\n                            <button className=\"btn page-link\" disabled>Siguiente</button>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListaItem from './ListaItem';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ListaItemSmall from './ListaItemSmall';\r\nimport Pagination from '../TransVentas/Pagination';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nModal.setAppElement('#root');\r\n\r\nconst ListaCliente = () => {\r\n    const [item, setItem] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [openB, setOpenB] = useState(false);\r\n    const [openM, setOpenM] = useState(false);\r\n\r\n    const { datos } = useParams();\r\n\r\n    const matches630 = useMediaQuery('(min-width:760px)');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = item.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n    //Cliente\r\n    const [aniadidoArrow, setAniadidoArrow] = useState(false);\r\n    const [nombreArrow, setNombreArrow] = useState(false);\r\n\r\n    //Proveedor\r\n    const [nameArrow, setNameArrow] = useState(false);\r\n    const [empresaArrow, setEmpresaArrow] = useState(false);\r\n\r\n\r\n    //Trabajador\r\n    const [trabArrow, setTrabArrow] = useState(false);\r\n    const [tipoArrow, setTipoArrow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let c = datos.indexOf(\"c\");\r\n        let e = datos.indexOf(\"e\");\r\n        const cantClient = datos.slice(c + 1, e);\r\n\r\n\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=${cantClient}`\r\n                );\r\n                console.log(result.data.results[0].registered.date);\r\n                const array1 = result.data.results;\r\n                let elementos = [];\r\n                console.log(\"Query \" + cantClient);\r\n                const tipoU = ['Administrador', 'Trabajador']\r\n                for (let i = 0; i < cantClient; i++) {\r\n                    console.log(result.data.results.registered);\r\n                    const a = Math.round(Math.random() * (25) + 0);\r\n                    let num = String.fromCharCode(65 + a);\r\n                    const tipoUser = Math.round(Math.random() * (1) + 0);\r\n                    const fech = result.data.results[i].registered.date;\r\n                    const fechita = fech.split(\"T\");\r\n                    let usuarios = {\r\n                        id: \"usuarios \" + i,\r\n                        nombre: array1[i].name.first,\r\n                        apellido: array1[i].name.last,\r\n                        direccion: array1[i].location.street.name + \" \" + array1[i].location.street.number + \", \" + array1[i].location.city,\r\n                        phono: array1[i].phone,\r\n                        mail: array1[i].email,\r\n                        fecha: fechita[0],\r\n                        empresa: \"Empresa \" + num,\r\n                        foto: array1[i].picture.large,\r\n                        tipo: tipoU[tipoUser],\r\n                    }\r\n                    elementos.push(usuarios);\r\n                }\r\n                console.log(\"elementos \" + elementos);\r\n                setItem(elementos);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClickB = () => {\r\n        setOpenB(true);\r\n    };\r\n\r\n    const handleCloseB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenB(false);\r\n    };\r\n\r\n    const handleClickM = () => {\r\n        setOpenM(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleCloseM = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenM(false);\r\n    };\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            paddingLeft: \"15%\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const compareAnia = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const eleA = a.fecha.split(\"-\");\r\n        const eleB = b.fecha.split(\"-\");\r\n        const cantA = new Date(eleA[0], eleA[1], eleA[2]);\r\n        const cantB = new Date(eleB[0], eleB[1], eleB[2]);\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareName = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.nombre;\r\n        const cantB = b.nombre;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareEmpresa = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.empresa;\r\n        const cantB = b.empresa;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareTipo = (a, b) => {\r\n        const cantA = a.tipo;\r\n        const cantB = b.tipo;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        switch (i) {\r\n            //Cliente: \r\n\r\n            //A√±adido\r\n            case 0:\r\n                let ania = item.sort(compareAnia);\r\n                if (aniadidoArrow) {\r\n                    setItem(ania.reverse());\r\n                }\r\n                else {\r\n                    setItem(ania);\r\n                }\r\n                setAniadidoArrow(!aniadidoArrow);\r\n                setNombreArrow(false);\r\n                break;\r\n            //Nombre\r\n            case 1:\r\n                let name = item.sort(compareName);\r\n                if (nombreArrow) {\r\n                    setItem(name.reverse());\r\n                }\r\n                else {\r\n                    setItem(name);\r\n                }\r\n                setAniadidoArrow(false);\r\n                setNombreArrow(!nombreArrow);\r\n                break;\r\n\r\n            //Proveedor:\r\n            //Nombre\r\n            case 2:\r\n                let prov = item.sort(compareName);\r\n                if (nameArrow) {\r\n                    setItem(prov.reverse());\r\n                }\r\n                else {\r\n                    setItem(prov);\r\n                }\r\n                setNameArrow(!nameArrow);\r\n                setEmpresaArrow(false);\r\n                break;\r\n            //Empresa\r\n            case 3:\r\n                let emp = item.sort(compareEmpresa);\r\n                if (empresaArrow) {\r\n                    setItem(emp.reverse());\r\n                }\r\n                else {\r\n                    setItem(emp);\r\n                }\r\n                setEmpresaArrow(!empresaArrow);\r\n                setNameArrow(false);\r\n                break;\r\n\r\n            //Trabajador\r\n            //Nombre\r\n            case 4:\r\n                let nameTrab = item.sort(compareName);\r\n                if (trabArrow) {\r\n                    setItem(nameTrab.reverse());\r\n                }\r\n                else {\r\n                    setItem(nameTrab);\r\n                }\r\n                setTrabArrow(!trabArrow);\r\n                setTipoArrow(false);\r\n                break;\r\n            //Tipo\r\n            case 5:\r\n                let tipoA = item.sort(compareTipo);\r\n                if (tipoArrow) {\r\n                    setItem(tipoA.reverse());\r\n                }\r\n                else {\r\n                    setItem(tipoA);\r\n                }\r\n                setTrabArrow(false);\r\n                setTipoArrow(!tipoArrow);\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-1 mb-4\">\r\n                        <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                    </div>\r\n                    <div className=\"col-md-6 mb-4\">\r\n                        <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                            <button className=\"btn btn-primary\" onClick={() => handleClickB()} ><SearchIcon /> </button>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                        </div>\r\n                    </div>\r\n                    <Snackbar open={openB}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleCloseB(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleCloseB(e)} severity=\"error\">\r\n                            ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                    </Snackbar>\r\n\r\n                    <Snackbar open={openM}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleCloseM(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleCloseM(e)} severity=\"error\">\r\n                            ¬°Alerta! No se pueden hacer cambios en la version de prueba\r\n                                                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                <div className=\"table-responsive-md tabla cardHome mt-0\">\r\n                    <h4 className=\"titulo\">Clientes:</h4>\r\n                    {matches630 ?\r\n                        <table className=\"table text-white\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Direcci√≥n</th>\r\n                                    <th>Contacto</th>\r\n                                    <th onClick={() => handleClick(0)}>A√±adido{aniadidoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Acciones</th>\r\n                                </tr>\r\n\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentPosts.map((item, index) => (\r\n                                    <ListaItem key={index} item={item} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        :\r\n                        <table className=\"table text-white\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Contacto</th>\r\n                                    <th>Acciones</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentPosts.map(item => (\r\n                                    <ListaItemSmall key={item.id} item={item} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n\r\n                    {item.length>postsPerPage ?\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={item.length}\r\n                            paginate={paginate}\r\n                            nextPage={nextPage}\r\n                            prevPage={prevPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                        :\r\n                        <></>\r\n                    }\r\n            </div>\r\n            </>\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3 ml-3`} >\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T pt-3 pl-3\">A√±adir Cliente</h2>\r\n                        </header>\r\n                        <main>\r\n                            <div className=\"row ml-3\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <div className=\"row texto\" style={{ background: \"transparent\", color: \"white\" }}>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"code\">Nombre: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"code\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"descripcion\">Email: </label>\r\n                                            <input type=\"email\" className=\"form-control\" id=\"descripcion\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"prov\">Telefono: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"prov\" ></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for=\"costoC\">Direcci√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" id=\"costoC\" ></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {matches630 ?\r\n                                <div className={classes.paper} className=\"row\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className={classes.paper} className=\"row\">\r\n                                    <div className=\"col-md-12 mt-3 mb-3\">\r\n                                        <button className=\"btn btn-success boton\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </main>\r\n                    </div>\r\n\r\n                </Modal>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default ListaCliente;","import React, {useState, useEffect, useRef} from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Proveedores = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickSB = () => {\r\n    setOpen(!open);\r\n};\r\n\r\nconst handleCloseSB = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\nconst borrar = () => {\r\n    const eleNode = ele.current;\r\n    eleNode.style.display = \"none\";\r\n    setAnchorEl(null);\r\n    setOpen(!open);\r\n}\r\n\r\nreturn (\r\n    <>\r\n        <tr id={id.id} ref={ele}>\r\n            <td>{item.nombre} {item.apellido}</td>\r\n            <td>{item.empresa}</td>\r\n            <td>mail: {item.mail} <br></br>\r\n                telefono: {item.phono}\r\n            </td>\r\n            <td>{item.direccion}</td>\r\n            <td>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n              <MenuItem  onClick={()=>handleClickSB()}>Borrar</MenuItem>\r\n            </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleCloseSB(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"error\">\r\n                                                        <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClickSB()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n\r\n\r\n               \r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar proveedor</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.name}>Nombre: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.trab}>Empresa: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.empresa} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.mail}>Mail: </label>\r\n                                    <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.phone}>Telefono: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                    <label for={id.dirr}>Direcci√≥n: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                            </main>\r\n                        </div>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Proveedores;\r\n","import React, {useState, useEffect, useRef} from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n  }\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ProveedoresSmall = ({ item }) => {\r\n    \r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n    \r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    \r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickSB = () => {\r\n    setOpen(!open);\r\n};\r\n\r\nconst handleCloseSB = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\nconst borrar = () => {\r\n    const eleNode = ele.current;\r\n    eleNode.style.display = \"none\";\r\n    setAnchorEl(null);\r\n    setOpen(!open);\r\n}\r\n\r\n\r\n\r\nreturn (\r\n    <>\r\n        <tr id={id.id} ref={ele}>\r\n            <td>{item.nombre} {item.apellido}<br />{item.empresa}</td>\r\n            <td>Fono: {item.phono}\r\n            </td>\r\n            <td>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n              <MenuItem  onClick={()=>handleClickSB()}>Borrar</MenuItem>\r\n            </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open} \r\n                        autoHideDuration={6000} \r\n                        TransitionComponent={TransitionLeft} \r\n                        onClose={(e)=>handleCloseSB(e)}\r\n                        anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }}\r\n                        key={\"top\"+\"center\"}\r\n                        >\r\n                                                    <Alert severity=\"error\">\r\n                                                        <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                                                        <div className=\"mt-2\">\r\n                                                            <div className=\"row\">\r\n                                                            <div className=\"col-lg-6 mr-auto\">\r\n                                                                <button className=\"btn btn success\" onClick={()=>borrar()}>Si</button>\r\n                                                            </div>\r\n                                                            <div className=\"col-lg-6 mL-auto\">\r\n                                                                <button className=\"btn btn error\" onClick={()=>handleClickSB()}>No</button>\r\n                                                            </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </Alert>\r\n                                                </Snackbar>\r\n\r\n\r\n               \r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar proveedor</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-5\">\r\n                                <div className=\"col-md-12\">\r\n                                    <label for={id.name}>Nombre: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.trab}>Empresa: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.empresa} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}} ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.mail}>Mail: </label>\r\n                                    <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.phone}>Telefono: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12\">\r\n                                    <label for={id.dirr}>Direcci√≥n: </label>\r\n                                    <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                            </main>\r\n                        </div>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProveedoresSmall;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Proveedores from './Proveedore';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport ProveedoresSmall from './ProveedoreSmall';\r\nimport Pagination from '../TransVentas/Pagination';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nModal.setAppElement('#root');\r\n\r\nconst ListaProveedor = () => {\r\n    const [item, setItem] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [openB, setOpenB] = useState(false);\r\n    const [openM, setOpenM] = useState(false);\r\n\r\n    const { datos } = useParams();\r\n\r\n    const matches630 = useMediaQuery('(min-width:760px)');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = item.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n    //Cliente\r\n    const [aniadidoArrow, setAniadidoArrow] = useState(false);\r\n    const [nombreArrow, setNombreArrow] = useState(false);\r\n\r\n    //Proveedor\r\n    const [nameArrow, setNameArrow] = useState(false);\r\n    const [empresaArrow, setEmpresaArrow] = useState(false);\r\n\r\n\r\n    //Trabajador\r\n    const [trabArrow, setTrabArrow] = useState(false);\r\n    const [tipoArrow, setTipoArrow] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        let e = datos.indexOf(\"e\");\r\n        let b = datos.indexOf(\"b\");\r\n        const cantProv = datos.slice(e + 1, b);\r\n\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=${cantProv}`\r\n                );\r\n                console.log(result.data.results[0].registered.date);\r\n                const array1 = result.data.results;\r\n                let elementos = [];\r\n                console.log(\"Query \" + cantProv);\r\n                const tipoU = ['Administrador', 'Trabajador']\r\n                for (let i = 0; i < cantProv; i++) {\r\n                    console.log(result.data.results.registered);\r\n                    const a = Math.round(Math.random() * (25) + 0);\r\n                    let num = String.fromCharCode(65 + a);\r\n                    const tipoUser = Math.round(Math.random() * (1) + 0);\r\n                    const fech = result.data.results[i].registered.date;\r\n                    const fechita = fech.split(\"T\");\r\n                    let usuarios = {\r\n                        id: \"usuarios \" + i,\r\n                        nombre: array1[i].name.first,\r\n                        apellido: array1[i].name.last,\r\n                        direccion: array1[i].location.street.name + \" \" + array1[i].location.street.number + \", \" + array1[i].location.city,\r\n                        phono: array1[i].phone,\r\n                        mail: array1[i].email,\r\n                        fecha: fechita[0],\r\n                        empresa: \"Empresa \" + num,\r\n                        foto: array1[i].picture.large,\r\n                        tipo: tipoU[tipoUser],\r\n                    }\r\n                    elementos.push(usuarios);\r\n                }\r\n                console.log(\"elementos \" + elementos);\r\n                setItem(elementos);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClickB = () => {\r\n        setOpenB(true);\r\n    };\r\n\r\n    const handleCloseB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenB(false);\r\n    };\r\n\r\n    const handleClickM = () => {\r\n        setOpenM(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleCloseM = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenM(false);\r\n    };\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            paddingLeft: \"15%\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const compareAnia = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const eleA = a.fecha.split(\"-\");\r\n        const eleB = b.fecha.split(\"-\");\r\n        const cantA = new Date(eleA[0], eleA[1], eleA[2]);\r\n        const cantB = new Date(eleB[0], eleB[1], eleB[2]);\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareName = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.nombre;\r\n        const cantB = b.nombre;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareEmpresa = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.empresa;\r\n        const cantB = b.empresa;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareTipo = (a, b) => {\r\n        const cantA = a.tipo;\r\n        const cantB = b.tipo;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        switch (i) {\r\n            //Cliente: \r\n\r\n            //A√±adido\r\n            case 0:\r\n                let ania = item.sort(compareAnia);\r\n                if (aniadidoArrow) {\r\n                    setItem(ania.reverse());\r\n                }\r\n                else {\r\n                    setItem(ania);\r\n                }\r\n                setAniadidoArrow(!aniadidoArrow);\r\n                setNombreArrow(false);\r\n                break;\r\n            //Nombre\r\n            case 1:\r\n                let name = item.sort(compareName);\r\n                if (nombreArrow) {\r\n                    setItem(name.reverse());\r\n                }\r\n                else {\r\n                    setItem(name);\r\n                }\r\n                setAniadidoArrow(false);\r\n                setNombreArrow(!nombreArrow);\r\n                break;\r\n\r\n            //Proveedor:\r\n            //Nombre\r\n            case 2:\r\n                let prov = item.sort(compareName);\r\n                if (nameArrow) {\r\n                    setItem(prov.reverse());\r\n                }\r\n                else {\r\n                    setItem(prov);\r\n                }\r\n                setNameArrow(!nameArrow);\r\n                setEmpresaArrow(false);\r\n                break;\r\n            //Empresa\r\n            case 3:\r\n                let emp = item.sort(compareEmpresa);\r\n                if (empresaArrow) {\r\n                    setItem(emp.reverse());\r\n                }\r\n                else {\r\n                    setItem(emp);\r\n                }\r\n                setEmpresaArrow(!empresaArrow);\r\n                setNameArrow(false);\r\n                break;\r\n\r\n            //Trabajador\r\n            //Nombre\r\n            case 4:\r\n                let nameTrab = item.sort(compareName);\r\n                if (trabArrow) {\r\n                    setItem(nameTrab.reverse());\r\n                }\r\n                else {\r\n                    setItem(nameTrab);\r\n                }\r\n                setTrabArrow(!trabArrow);\r\n                setTipoArrow(false);\r\n                break;\r\n            //Tipo\r\n            case 5:\r\n                let tipoA = item.sort(compareTipo);\r\n                if (tipoArrow) {\r\n                    setItem(tipoA.reverse());\r\n                }\r\n                else {\r\n                    setItem(tipoA);\r\n                }\r\n                setTrabArrow(false);\r\n                setTipoArrow(!tipoArrow);\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-1 mb-4\">\r\n                        <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                    </div>\r\n                    <div className=\"col-md-6 mb-4\">\r\n                        <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                            <button className=\"btn btn-primary\" onClick={() => handleClickB()} ><SearchIcon /> </button>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                        </div>\r\n                    </div>\r\n                    <Snackbar open={openB}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleCloseB(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleCloseB(e)} severity=\"error\">\r\n                            ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                    </Snackbar>\r\n\r\n                    <Snackbar open={openM}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleCloseM(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleCloseM(e)} severity=\"error\">\r\n                            ¬°Alerta! No se pueden hacer cambios en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                <div className=\"table-responsive-md tabla  cardHome\">\r\n                    <h4 className=\"titulo\">Proveedores:</h4>\r\n\r\n                    {matches630 ?\r\n                        <table className=\"table text-white\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th onClick={() => handleClick(2)}>Nombre{nameArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th onClick={() => handleClick(3)}>Empresa{empresaArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Contacto</th>\r\n                                    <th>Direcci√≥n</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentPosts.map(item => (\r\n                                    <Proveedores key={item.id} item={item} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                        :\r\n                        <table className=\"table text-white\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th onClick={() => handleClick(2)}>Nombre{nameArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Contacto</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {currentPosts.map(item => (\r\n                                    <ProveedoresSmall key={item.id} item={item} />\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    }\r\n                    {item.length> postsPerPage ?\r\n                        <Pagination\r\n                            postsPerPage={postsPerPage}\r\n                            totalPosts={item.length}\r\n                            paginate={paginate}\r\n                            nextPage={nextPage}\r\n                            prevPage={prevPage}\r\n                            currentPage={currentPage}\r\n                        />\r\n                        :\r\n                        <></>\r\n                    }\r\n\r\n                </div>\r\n            </>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3 ml-3`} >\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T pt-3 pl-3\">A√±adir Proveedor</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row ml-3\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <div className=\"row texto\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"code\">Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"code\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"name\">Empresa: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"descripcion\">Email: </label>\r\n                                        <input type=\"email\" className=\"form-control\" id=\"descripcion\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"prov\">Telefono: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"prov\" ></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"costoC\">Direcci√≥n: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"costoC\" ></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {matches630 ?\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-12 mt-3 mb-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                </div>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaProveedor;","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst Trab = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td> \r\n                    <img src={item.foto} alt='Avatar' style={{ width: '40px' }}></img></td>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>{item.tipo}</td>\r\n                <td>mail: {item.mail} <br></br>\r\n                telefono: {item.phono}\r\n                </td>\r\n                <td>{item.direccion}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al trabajador?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar trabajador</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row \">\r\n                        <div className=\"col-md-4 mt-3\" style={{textAlign:\"center\"}}>\r\n                                <img src={item.foto} alt=\"user\" className=\"rounded-circle\" width=\"150px\" />\r\n                                </div>\r\n                            <div className=\"col-md-8 mt-3\">\r\n                                <div className=\"row texto\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.name}>Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.trab}>Rol: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.tipo} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.mail}>Mail: </label>\r\n                                        <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.phone}>Telefono: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.dirr}>Direcci√≥n: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Trab;\r\n","export default __webpack_public_path__ + \"static/media/avatar.4670a339.jpg\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst TrabSmall = ({ item }) => {\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const nombre = item.nombre + \" \" + item.apellido;\r\n    const [id, setid] = useState({});\r\n    const ele = useRef();\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    const tipo = ['Administrador', 'Trabajador']\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            avatar: item.id + \" Avatar\",\r\n            name: item.id + \" name\",\r\n            trab: item.id + \" tipo\",\r\n            mail: item.id + \" mail\",\r\n            phone: item.id + \" fone\",\r\n            dirr: item.id + \"dirr\"\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr id={id.id} ref={ele}>\r\n                <td> \r\n                    <img src={item.foto} alt='Avatar' style={{ width: '40px' }}></img></td>\r\n                <td>{item.nombre} {item.apellido}</td>\r\n                <td>{item.tipo}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al trabajador?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-5 ml-5\">Editar trabajador</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row \">\r\n                        <div className=\"col-md-4 mt-3\" style={{textAlign:\"center\"}}>\r\n                                <img src={item.foto} alt=\"user\" className=\"rounded-circle\" width=\"150px\" />\r\n                                </div>\r\n                            <div className=\"col-md-8 mt-3 ml-3\">\r\n                                <div className=\"row texto\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.name}>Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={nombre} id={id.name} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.trab}>Rol: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.tipo} id={id.trab} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.mail}>Mail: </label>\r\n                                        <input type=\"email\" className=\"form-control\" value={item.mail} id={id.mail} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.phone}>Telefono: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.phono} id={id.phone} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for={id.dirr}>Direcci√≥n: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.direccion} id={id.dirr} disabled style={{background: \"transparent\", color:\"white\"}}></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TrabSmall;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Trab from './Trab';\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport avatar from '../avatar.jpg'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport TrabSmall from './TrabSmall';\r\nimport Pagination from '../TransVentas/Pagination';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nModal.setAppElement('#root');\r\n\r\nconst ListaTrabajadores = () => {\r\n    const [item, setItem] = useState([]);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [openB, setOpenB] = useState(false);\r\n    const [openM, setOpenM] = useState(false);\r\n\r\n    const { datos } = useParams();\r\n\r\n    const matches630 = useMediaQuery('(min-width:760px)');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = item.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n    //Cliente\r\n    const [aniadidoArrow, setAniadidoArrow] = useState(false);\r\n    const [nombreArrow, setNombreArrow] = useState(false);\r\n\r\n    //Proveedor\r\n    const [nameArrow, setNameArrow] = useState(false);\r\n    const [empresaArrow, setEmpresaArrow] = useState(false);\r\n\r\n\r\n    //Trabajador\r\n    const [trabArrow, setTrabArrow] = useState(false);\r\n    const [tipoArrow, setTipoArrow] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        let t = datos.indexOf(\"t\");\r\n        let s = datos.indexOf(\"s\");\r\n        const cantT = datos.slice(t + 1, s);\r\n\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=${cantT}`\r\n                );\r\n                console.log(result.data.results[0].registered.date);\r\n                const array1 = result.data.results;\r\n                let elementos = [];\r\n                console.log(\"Query \" + cantT);\r\n                const tipoU = ['Administrador', 'Trabajador']\r\n                for (let i = 0; i < cantT; i++) {\r\n                    console.log(result.data.results.registered);\r\n                    const a = Math.round(Math.random() * (25) + 0);\r\n                    let num = String.fromCharCode(65 + a);\r\n                    const tipoUser = Math.round(Math.random() * (1) + 0);\r\n                    const fech = result.data.results[i].registered.date;\r\n                    const fechita = fech.split(\"T\");\r\n                    let usuarios = {\r\n                        id: \"usuarios \" + i,\r\n                        nombre: array1[i].name.first,\r\n                        apellido: array1[i].name.last,\r\n                        direccion: array1[i].location.street.name + \" \" + array1[i].location.street.number + \", \" + array1[i].location.city,\r\n                        phono: array1[i].phone,\r\n                        mail: array1[i].email,\r\n                        fecha: fechita[0],\r\n                        empresa: \"Empresa \" + num,\r\n                        foto: array1[i].picture.large,\r\n                        tipo: tipoU[tipoUser],\r\n                    }\r\n                    elementos.push(usuarios);\r\n                }\r\n                console.log(\"elementos \" + elementos);\r\n                setItem(elementos);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClickB = () => {\r\n        setOpenB(true);\r\n    };\r\n\r\n    const handleCloseB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenB(false);\r\n    };\r\n\r\n    const handleClickM = () => {\r\n        setOpenM(true);\r\n        setModalIsOpen(false);\r\n    };\r\n\r\n    const handleCloseM = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenM(false);\r\n    };\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            paddingLeft: \"15%\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n\r\n    const compareAnia = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const eleA = a.fecha.split(\"-\");\r\n        const eleB = b.fecha.split(\"-\");\r\n        const cantA = new Date(eleA[0], eleA[1], eleA[2]);\r\n        const cantB = new Date(eleB[0], eleB[1], eleB[2]);\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareName = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.nombre;\r\n        const cantB = b.nombre;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareEmpresa = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.empresa;\r\n        const cantB = b.empresa;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareTipo = (a, b) => {\r\n        const cantA = a.tipo;\r\n        const cantB = b.tipo;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        switch (i) {\r\n            //Cliente: \r\n\r\n            //A√±adido\r\n            case 0:\r\n                let ania = item.sort(compareAnia);\r\n                if (aniadidoArrow) {\r\n                    setItem(ania.reverse());\r\n                }\r\n                else {\r\n                    setItem(ania);\r\n                }\r\n                setAniadidoArrow(!aniadidoArrow);\r\n                setNombreArrow(false);\r\n                break;\r\n            //Nombre\r\n            case 1:\r\n                let name = item.sort(compareName);\r\n                if (nombreArrow) {\r\n                    setItem(name.reverse());\r\n                }\r\n                else {\r\n                    setItem(name);\r\n                }\r\n                setAniadidoArrow(false);\r\n                setNombreArrow(!nombreArrow);\r\n                break;\r\n\r\n            //Proveedor:\r\n            //Nombre\r\n            case 2:\r\n                let prov = item.sort(compareName);\r\n                if (nameArrow) {\r\n                    setItem(prov.reverse());\r\n                }\r\n                else {\r\n                    setItem(prov);\r\n                }\r\n                setNameArrow(!nameArrow);\r\n                setEmpresaArrow(false);\r\n                break;\r\n            //Empresa\r\n            case 3:\r\n                let emp = item.sort(compareEmpresa);\r\n                if (empresaArrow) {\r\n                    setItem(emp.reverse());\r\n                }\r\n                else {\r\n                    setItem(emp);\r\n                }\r\n                setEmpresaArrow(!empresaArrow);\r\n                setNameArrow(false);\r\n                break;\r\n\r\n            //Trabajador\r\n            //Nombre\r\n            case 4:\r\n                let nameTrab = item.sort(compareName);\r\n                if (trabArrow) {\r\n                    setItem(nameTrab.reverse());\r\n                }\r\n                else {\r\n                    setItem(nameTrab);\r\n                }\r\n                setTrabArrow(!trabArrow);\r\n                setTipoArrow(false);\r\n                break;\r\n            //Tipo\r\n            case 5:\r\n                let tipoA = item.sort(compareTipo);\r\n                if (tipoArrow) {\r\n                    setItem(tipoA.reverse());\r\n                }\r\n                else {\r\n                    setItem(tipoA);\r\n                }\r\n                setTrabArrow(false);\r\n                setTipoArrow(!tipoArrow);\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-1 mb-4\">\r\n                        <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                    </div>\r\n                    <div className=\"col-md-6 mb-4\">\r\n                        <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                            <button className=\"btn btn-primary\" onClick={() => handleClickB()} ><SearchIcon /> </button>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                        </div>\r\n                    </div>\r\n                    <Snackbar open={openB}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleCloseB(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleCloseB(e)} severity=\"error\">\r\n                            ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                        </Alert>\r\n                    </Snackbar>\r\n\r\n                    <Snackbar open={openM}\r\n                        autoHideDuration={6000}\r\n                        TransitionComponent={TransitionLeft}\r\n                        onClose={(e) => handleCloseM(e)}\r\n                        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        key={\"top\" + \"center\"}\r\n                    >\r\n\r\n                        <Alert onClose={(e) => handleCloseM(e)} severity=\"error\">\r\n                            ¬°Alerta! No se pueden hacer cambios en la versi√≥n de prueba\r\n                                                        </Alert>\r\n                    </Snackbar>\r\n                </div>\r\n                <div className=\"table-responsive-md tabla  cardHome\">\r\n                    <h4 className=\"titulo\">Trabajadores:</h4>\r\n                    <table className=\"table text-white\">\r\n                        <thead>\r\n                            {matches630 ?\r\n                                <tr>\r\n                                    <th>Foto</th>\r\n                                    <th onClick={() => handleClick(4)}>Nombre{trabArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th onClick={() => handleClick(5)}>Tipo{tipoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Contacto</th>\r\n                                    <th>Direcci√≥n</th>\r\n                                    <th>Acciones</th>\r\n                                </tr>\r\n                                :\r\n                                <tr>\r\n                                    <th>Foto</th>\r\n                                    <th onClick={() => handleClick(4)}>Nombre{trabArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th onClick={() => handleClick(5)}>Tipo{tipoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                                    <th>Acciones</th>\r\n                                </tr>\r\n                            }\r\n                        </thead>\r\n                        {matches630 ?\r\n                            <tbody>\r\n                                {currentPosts.map(item => (\r\n                                    <Trab key={item.id} item={item} />\r\n                                ))}\r\n                            </tbody>\r\n                            :\r\n                            <tbody>\r\n                                {currentPosts.map(item => (\r\n                                    <TrabSmall key={item.id} item={item} />\r\n                                ))}\r\n                            </tbody>\r\n                        }\r\n                    </table>\r\n                   {item.length>postsPerPage ? \r\n                   <Pagination\r\n                        postsPerPage={postsPerPage}\r\n                        totalPosts={item.length}\r\n                        paginate={paginate}\r\n                        nextPage={nextPage}\r\n                        prevPage={prevPage}\r\n                        currentPage={currentPage}\r\n                    />\r\n                :\r\n                <></>\r\n                }\r\n                </div>\r\n            </>\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3 ml-3`} >\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T pt-3 pl-3\">A√±adir Trabajador</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-md-4 mt-3\" style={{ textAlign: \"center\" }}>\r\n                                <img src={avatar} alt=\"user\" className=\"rounded-circle\" width=\"150px\" />\r\n                            </div>\r\n                            <div className=\"col-md-8 mt-3\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for=\"code\">Nombre: </label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"code\" ></input>\r\n                                </div>\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for=\"rol\">Rol: </label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"rol\" ></input>\r\n                                </div>\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for=\"descripcion\">Email: </label>\r\n                                    <input type=\"email\" className=\"form-control\" id=\"descripcion\" ></input>\r\n                                </div>\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for=\"prov\">Telefono: </label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"prov\" ></input>\r\n                                </div>\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <label for=\"costoC\">Direcci√≥n: </label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"costoC\" ></input>\r\n                                </div>\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"file\" className=\"form-control-file border\" name=\"file\"></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {matches630 ?\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-3 mb-5\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row\">\r\n                                <div className=\"col-md-12 mt-3 mb-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => handleClickM()}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ListaTrabajadores;","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst VentaItem = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    const [Neto, setNeto] = useState(0);\r\n    const [IVA, setIVA] = useState(0);\r\n\r\n      useEffect(() => {\r\n          setid({\r\n              id: item.numero,\r\n              e: item.numero + \" e\",\r\n              f: item.numero + \" f\",\r\n              t: item.numero + \" t\",\r\n              p: item.numero + \"p\",\r\n              total : \"$\"+item.total\r\n          });\r\n          setTotal1(item.prod1Price * item.prod1Cant);\r\n          setTotal2(item.prod2Price * item.prod2Cant);\r\n          let iba = ((19*item.total)/100).toFixed(2);\r\n          setIVA(iba);\r\n          setNeto((item.total-iba).toFixed(2));\r\n      }, []);\r\n  \r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${Neto}</td>\r\n                <td>${IVA}</td>\r\n                <td>${item.total}</td>\r\n                <td>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => setModalIsOpen(true)}>\r\n                        Detalle\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className=\"contenedorModalCOM\"\r\n                \r\n            >\r\n                <div className=\"mt-3\">\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T\">Detalle Venta</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>Numero de boleta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} disabled></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} disabled></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Cliente: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} disabled></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total venta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={id.total} id={id.t} disabled></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Precio unitario</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">${item.prod1Price}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">${item.prod2Price}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n                <footer NclassNameName=\"footer\">\r\n                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                </footer>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VentaItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport numeral from 'numeral';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst VentaItemSmall = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    \r\n    const [t, setT] = useState(0);\r\n    const matches = useMediaQuery('(min-width:750px)');\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.numero,\r\n            e: item.numero + \" e\",\r\n            f: item.numero + \" f\",\r\n            t: item.numero + \" t\",\r\n            p: item.numero + \"p\",\r\n            total: \"$\" + numeral(item.total).format(0, 0)\r\n        });\r\n        setTotal1(numeral(item.prod1Price * item.prod1Cant).format(0, 0));\r\n        setTotal2(numeral(item.prod2Price * item.prod2Cant).format(0, 0));\r\n        setT(numeral(item.total).format(0, 0))\r\n    }, []);\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor:\"transparent\"\r\n          },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n    \r\n    const classes = useStyles();\r\n   \r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${t}</td>\r\n                <td className=\"center\">\r\n                    <button type=\"button\" className=\"btn btn-primary p-1\" onClick={() => setModalIsOpen(true)}>\r\n                            <VisibilityIcon fontSize=\"small\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-4\">Detalle Venta</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto ml-4\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>N√∫mero de boleta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Cliente: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total venta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={id.total} id={id.t} disabled style={{backgroundColor:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered text-white\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-3\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                            </main>\r\n                        </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VentaItemSmall;\r\n","import Pagination from './Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport VentaItem from './VentaItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport axios from 'axios';\r\nimport VentaItemSmall from './VentaItemSmall';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst VentaList = ({ rand, clientes }) => {\r\n    const random = rand;\r\n    const cliente = clientes;\r\n    const [itemC, setItemC] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const matches630 = useMediaQuery('(min-width:630px)');\r\n\r\n\r\n\r\n    const dias = (a) => {\r\n        if (a === 0 || a === 2 || a === 4 || a === 6 || a === 7 || a === 9 || a === 11) {\r\n            return 30;\r\n        }\r\n        else if (a === 1) {\r\n            return 27;\r\n        }\r\n        else {\r\n            return 29;\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data);\r\n                let listaElementos = result.data;\r\n                let res = (listaElementos).concat(listaElementos);\r\n                res.push(listaElementos[0]);\r\n                res.push(listaElementos[1]);\r\n\r\n                const today = new Date(Date.now());\r\n                const cantB = Math.round(Math.random() * (90) + random.cantB);\r\n                const boletaMes = Math.round(cantB / (today.getMonth() + 1));\r\n                const elem = [];\r\n                let idGroup = 0;\r\n                console.log(cliente[0]);\r\n                console.log(\"Elementos: \" + random.cantB + \" \" + today.getMonth() + \" \" + cantB + \" \" + boletaMes);\r\n                for (let j = 0; j <= today.getMonth(); j++) {\r\n                    const mes = dias(j);\r\n                    for (let i = 0; i < boletaMes; i++) {\r\n                        if (i % 10 === 0) {\r\n                            idGroup = idGroup++;\r\n                        }\r\n                        const nc = Math.round(Math.random() * (12000) + 1000);\r\n                        const n = Math.round(Math.random() * (90000) + nc);\r\n                        const dias = Math.round(Math.random() * (mes) + 1);\r\n                        const id1 = Math.round(Math.random() * (19) + 0);\r\n                        let id2 = Math.round(Math.random() * (19) + 0);\r\n                        const a = Math.round(Math.random() * (4) + 0);\r\n                        const cli = cliente[a].name.first + \" \" + cliente[a].name.last;\r\n\r\n                        if (id1 === id2) {\r\n                            id2 = id2 + 1;\r\n                        }\r\n                        const mesA = j + 1;\r\n                        const cant1 = Math.round(Math.random() * (10) + 1);\r\n                        const cant2 = Math.round(Math.random() * (10) + 1);\r\n                        const total = res[id1].price * cant1 * 1000 + res[id2].price * cant2 * 1000;\r\n                        let el = {\r\n                            idGroup: idGroup,\r\n                            'key': n,\r\n                            'numero': nc,\r\n                            'fecha': dias + \"/\" + mesA + \"/\" + today.getFullYear(),\r\n                            'prov': cli,\r\n                            'total': total,\r\n                            'prod1': res[id1].name,\r\n                            'prod1Price': res[id1].price * 1000,\r\n                            'prod1Cant': cant1,\r\n                            'prod2': res[id2].name,\r\n                            'prod2Price': res[id2].price * 10000,\r\n                            'prod2Cant': cant2,\r\n\r\n                        };\r\n                        elem.push(el);\r\n                    }\r\n                }\r\n                const pag = Math.ceil(cantB / 10);\r\n                const a = [];\r\n                for (let i = 0; i < pag; i++) {\r\n                    let j = i + 1;\r\n                    let c = {\r\n                        id: j,\r\n                        name: pag + j\r\n                    }\r\n                    a.push(c);\r\n                }\r\n                setItemC(elem);\r\n                setLoad(true);\r\n\r\n                console.log(elem.length);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = itemC.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {Load ?\r\n                <>\r\n                    <table className=\"table text-white mt-3\" style={{ width: \"90%\", marginLeft: \"5%\" }}>\r\n                        <thead style={{ fontSize: \"14px\" }}>\r\n                            {matches630 ?\r\n                                <tr>\r\n                                    <th>N¬∞ Boleta</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Venta neta</th>\r\n                                    <th>IVA</th>\r\n                                    <th>Total</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                                :\r\n                                <tr>\r\n                                    <th>Bol</th>\r\n                                    <th>Fecha</th>\r\n                                    <th>Total</th>\r\n                                    <th>Acci√≥n</th>\r\n                                </tr>\r\n                            }\r\n                        </thead>\r\n                        {matches630 ?\r\n                        <tbody>\r\n                            {currentPosts.map((item, index) => (\r\n                                <VentaItem key={index} item={item} />\r\n                            ))}\r\n                        </tbody>\r\n                        :\r\n                        <tbody>\r\n                            {currentPosts.map((item, index) => (\r\n                                <VentaItemSmall key={index} item={item} />\r\n                            ))}\r\n                        </tbody>\r\n                        }\r\n                    </table>\r\n                    <Pagination\r\n                        postsPerPage={postsPerPage}\r\n                        totalPosts={itemC.length}\r\n                        paginate={paginate}\r\n                        nextPage={nextPage}\r\n                        prevPage={prevPage}\r\n                        currentPage={currentPage}\r\n                    />\r\n                </>\r\n                :\r\n                <div className=\"contenedor center\" >\r\n                    <CircularProgress />\r\n                </div>}\r\n\r\n        </>\r\n\r\n    );\r\n}\r\nexport default VentaList;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport VentaList from './VentaList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport {useParams} from 'react-router-dom';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst Venta = () => {\r\n    const [random, setRandom] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [cliente, setCliente] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const {datos} = useParams();\r\n    const matches = useMediaQuery('(min-width:990px)');\r\n\r\n    useEffect(() => {\r\n        let b = datos.indexOf(\"b\");\r\n        let v = datos.indexOf(\"v\");\r\n        let f = datos.indexOf(\"f\");\r\n     const ele = {\r\n                \r\n                cantB: datos.slice(b+1,v),\r\n                cantV: datos.slice(v+1,f),\r\n               \r\n        }\r\n        setRandom(ele);\r\n        \r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://randomuser.me/api/?results=5`\r\n                );\r\n                console.log(result.data.results);\r\n                setCliente(result.data.results);\r\n                setloading(true);\r\n                console.log(loading);\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n           <>\r\n                <div className=\"row\">\r\n                    <div className={`${matches ? 'col-lg-6' : ' col-lg-12'}  mt-1 `}>\r\n                        <div className=\"input-group mb-3 inputBuscar bt\" >\r\n                            <button className=\"btn btn-info\" ><SearchIcon onClick={() => handleClick()} /> </button>\r\n                            <input type=\"number\" className=\"form-control\" placeholder=\"Buscar por n¬∞ boleta\" min=\"0\" ></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${matches ? 'col-lg-6' : ' col-lg-12'} `}>\r\n                        <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                            <button className=\"btn btn-primary\"><SearchIcon onClick={() => handleClick()} /> </button>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table-responsive-md tabla\">\r\n                        <VentaList rand={random} clientes={cliente} />\r\n                </div>\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Venta;","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\nconst CompraItem = ({ item }) => {\r\n    const [id, setid] = useState({});\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [total1, setTotal1] = useState(0);\r\n    const [total2, setTotal2] = useState(0);\r\n    \r\n    const [Neto, setNeto] = useState(0);\r\n    const [IVA, setIVA] = useState(0);\r\n      useEffect(() => {\r\n          setid({\r\n              id: item.numero,\r\n              e: item.numero + \" e\",\r\n              f: item.numero + \" f\",\r\n              t: item.numero + \" t\",\r\n              p: item.numero + \"p\"\r\n          });\r\n          setTotal1(item.prod1Price * item.prod1Cant);\r\n          setTotal2(item.prod2Price * item.prod2Cant);\r\n          let iba = (19*item.total)/100;\r\n          setIVA(iba);\r\n          setNeto(item.total-iba);\r\n      }, []);\r\n  \r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{item.numero}</td>\r\n                <td>{item.fecha}</td>\r\n                <td>${Neto}</td>\r\n                <td>${IVA}</td>\r\n                <td>${item.total}</td>\r\n                <td>\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={() => setModalIsOpen(true)}>\r\n                        Detalle\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className=\"contenedorModalCOM\"\r\n                \r\n            >\r\n                <div className=\"mt-3\">\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T\">Detalle Compra</h2>\r\n                    </header>\r\n                    <main>\r\n                        <div className=\"row texto\">\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.id}>Numero de compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.numero} id={id.id} readonly></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.f}>Fecha: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.fecha} id={id.f} readonly></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.e}>Proveedor: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.prov} id={id.e} readonly></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.t}>Total compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.total} id={id.t} readonly></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <p >Desglose: </p>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"centrada\">Producto</th>\r\n                                            <th className=\"centrada\">Precio unitario</th>\r\n                                            <th className=\"centrada\">Cant</th>\r\n                                            <th className=\"centrada\">Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod1}</td>\r\n                                            <td className=\"centrada\">${item.prod1Price}</td>\r\n                                            <td className=\"centrada\">{item.prod1Cant}</td>\r\n                                            <td className=\"centrada\">${total1}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className=\"centrada\">{item.prod2}</td>\r\n                                            <td className=\"centrada\">${item.prod2Price}</td>\r\n                                            <td className=\"centrada\">{item.prod2Cant}</td>\r\n                                            <td className=\"centrada\">${total2}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n                <footer NclassNameName=\"footer\">\r\n                    <button className=\"btn btn-success boton mt-2\" onClick={() => setModalIsOpen(false)}>Cerrar</button>\r\n                </footer>\r\n\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CompraItem;\r\n","import React, {useEffect, useState} from 'react';\r\nimport CompraItem from './CompraItem';\r\nimport Pagination from '../TransVentas/Pagination';\r\n\r\n\r\nconst ComprasList=({ elemento, random })=>{\r\n\r\n    const [item, setItem] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n  \r\n    \r\n    const dias = (a) => {\r\n        if (a == 0 || a == 2 || a == 4 || a == 6 || a == 7 || a == 9 || a == 11) {\r\n            return 30;\r\n        }\r\n        else if (a == 1) {\r\n            return 27;\r\n        }\r\n        else {\r\n            return 29;\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        const cantB = Math.round(Math.random() * (90) + random.cantB);\r\n        const boletaMes = Math.round(cantB / (today.getMonth() + 1));\r\n        const elem = [];\r\n        console.log(\"Elementos: \"+ random.cantB + \" \" + today.getMonth() + \" \" + cantB + \" \" + boletaMes );\r\n        for (let j = 0; j <= today.getMonth(); j++) {\r\n            const mes = dias(j);\r\n            for (let i = 0; i < boletaMes; i++) {\r\n                const nc = Math.round(Math.random() * (12000) + 1000);\r\n                const n = Math.round(Math.random() * (90000) + nc);\r\n                const dias = Math.round(Math.random() * (mes) + 1);\r\n                const id1 = Math.round(Math.random() * (19) + 0);\r\n                let id2 = Math.round(Math.random() * (19) + 0);\r\n                const a = Math.round(Math.random() * (25) + 0);\r\n                let num = String.fromCharCode(65 + a);\r\n                if (id1 == id2) {\r\n                    id2 = id2 + 1;\r\n                }\r\n                const mesA = j + 1;\r\n                const cant1 = Math.round(Math.random() * (20) + 1);\r\n                const cant2 = Math.round(Math.random() * (20) + 1);\r\n                const total = (elemento[id1].price * cant1 + elemento[id2].price * cant2).toFixed(2);\r\n                let el = {\r\n                    'key': n,\r\n                    'numero': nc,\r\n                    'fecha': dias + \"/\" + mesA + \"/\" + today.getFullYear(),\r\n                    'prov': \"Empresa \"+num,\r\n                    'total': total,\r\n                    'prod1': elemento[id1].title,\r\n                    'prod1Price': elemento[id1].price,\r\n                    'prod1Cant': cant1,\r\n                    'prod2': elemento[id2].title,\r\n                    'prod2Price': elemento[id2].price,\r\n                    'prod2Cant': cant2,\r\n\r\n                };\r\n                elem.push(el);\r\n            }\r\n        }\r\n        setItem(elem);\r\n        console.log(elem.length);\r\n}, []);\r\n\r\n // Get current posts\r\n const indexOfLastPost = currentPage * postsPerPage;\r\n const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n const currentPosts = item.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n // Change page\r\n const paginate = pageNumber => setCurrentPage(pageNumber);\r\n const nextPage  = () => setCurrentPage(currentPage+1);\r\n const prevPage = () => setCurrentPage(currentPage-1);\r\n\r\nreturn(\r\n    <>\r\n    <table className=\"table text-white\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>N¬∞ Compra</th>\r\n                        <th>Fecha</th>\r\n                        <th>Neto</th>\r\n                        <th>Iva</th>\r\n                        <th>Total</th>\r\n                        <th>Acci√≥n</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {currentPosts.map(item => (\r\n                       <CompraItem key={item.key} item={item} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Pagination \r\n            postsPerPage={postsPerPage}\r\n            totalPosts={item.length}\r\n            paginate={paginate}\r\n            nextPage = {nextPage}\r\n            prevPage = {prevPage}\r\n            currentPage = {currentPage}\r\n            />\r\n        </>\r\n)\r\n}\r\nexport default ComprasList;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ComprasList from './CompraList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { useParams } from 'react-router-dom';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nconst Compra = () => {\r\n    const [item, setItem] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [random, setRandom] = useState({});\r\n    const { datos } = useParams();\r\n    const matches = useMediaQuery('(min-width:990px)');\r\n\r\n    useEffect(() => {\r\n        let p = datos.indexOf(\"p\");\r\n        let i = datos.indexOf(\"i\");\r\n        let c = datos.indexOf(\"c\");\r\n        let e = datos.indexOf(\"e\");\r\n        let b = datos.indexOf(\"b\");\r\n        let v = datos.indexOf(\"v\");\r\n        let f = datos.indexOf(\"f\");\r\n        let m = datos.indexOf(\"m\");\r\n        let n = datos.indexOf(\"n\");\r\n        let t = datos.indexOf(\"t\");\r\n        const ele = {\r\n            cantP: datos.slice(p + 1, i),\r\n            inv: datos.slice(i + 1, c),\r\n            cantClient: datos.slice(c + 1, e),\r\n            cantProv: datos.slice(e + 1, b),\r\n            cantB: datos.slice(b + 1, v),\r\n            cantV: datos.slice(v + 1, f),\r\n            cantF: datos.slice(f + 1, m),\r\n            cantC: datos.slice(m + 1, n),\r\n            clN: datos.slice(n + 1, t),\r\n            cantT: datos.slice(t + 1, datos.length)\r\n        }\r\n        setRandom(ele);\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://fakestoreapi.com/products`\r\n                );\r\n                console.log(result.data);\r\n                setItem(result.data);\r\n                setLoad(true)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    if (Load) {\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                    <div className={`${matches ? 'col-lg-6' : ' col-lg-12'}  mt-1 `}>\r\n                        <div className=\"input-group mb-3 inputBuscar bt\" >\r\n                            <button className=\"btn btn-info\" ><SearchIcon onClick={() => handleClick()} /> </button>\r\n                            <input type=\"number\" className=\"form-control\" placeholder=\"Buscar por n¬∞ factura\" min=\"0\" ></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${matches ? 'col-lg-6' : ' col-lg-12'} `}>\r\n                        <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                            <button className=\"btn btn-primary\"><SearchIcon onClick={() => handleClick()} /> </button>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por proveedor\" ></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n                <div className=\"table-responsive-md tabla cardHome\">\r\n                    <ComprasList elemento={item} random={random} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Compra;","export default __webpack_public_path__ + \"static/media/product.f4f7bdd1.png\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\nModal.setAppElement('#root');\r\nconst ItemProducto = ({ item }) => {\r\n    const costo = numeral(item.costo).format(0, 0);\r\n    const price = numeral(item.price).format(0, 0);\r\n    const cant = numeral(item.cant).format(0, 0);\r\n    const matches630 = useMediaQuery('(min-width: 765px)');\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [id, setid] = useState({});\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n\r\n    \r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            cod: item.id + \" cod\",\r\n            name: item.id + \" name\",\r\n            cost: item.id + \" cost\",\r\n            price: item.id + \" price\",\r\n            inv: item.id + \"inv\",\r\n            min: item.id + \"min\",\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n<tr id={id.id} ref={ele}>\r\n                <td className=\"centrada\"><img className=\"\" src={item.image} style={{ height: '40px', alignSelf: \"center\" }}></img></td>\r\n                <td className=\"justi\" >{item.cod}</td>\r\n                <td className=\"justi\" >{item.title}</td>\r\n                <td className=\"centrada\">${costo}</td>\r\n                <td className=\"centrada\">${price}</td>\r\n                <td className=\"centrada\">{cant}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon /></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h2 className=\"h1T mt-3 ml-5\">Editar Producto</h2>\r\n                    </header>\r\n                    <main>\r\n                    <div className=\"row \">\r\n                    {matches630 ?\r\n                                 <div className=\"col-sm-4 mt-3\">\r\n                                <img className=\"imagen\" src={item.image}></img>\r\n                            </div> \r\n                            : \r\n                            <div></div>}\r\n                            <div className=\"col-md-8 mt-3\">\r\n                                <div className=\"row texto\">\r\n                        <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.cod}>C√≥digo: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.cod} id={id.cod} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.name}>Nombre: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.title} id={id.name} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.cost}>Costo compra: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={`$${costo}`} id={id.cost} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.price}>Precio venta: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={`$${price}`} id={id.price} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.inv}>Existencias: </label>\r\n                                <input type=\"text\" className=\"form-control\" value={item.cant} id={id.inv} disabled style={{background:\"transparent\"}}></input>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-3\">\r\n                                <label for={id.min}>Existencia minima: </label>\r\n                                <input type=\"text\" className=\"form-control\" value=\"2\" id={id.min} disabled style={{background:\"transparent\"}}></input>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {matches ?\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                </div>\r\n                                <div className=\"col-md-6 mt-3\">\r\n                                    <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={classes.paper} className=\"row mb-2\">\r\n                                <div className=\"col-md-12 mt-3\">\r\n                                    <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ItemProducto;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport numeral from 'numeral';\r\n\r\nimport Modal from 'react-modal';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ItemProductoLT = ({ item }) => {\r\n    const costo = numeral(item.costo).format(0, 0);\r\n    const price = numeral(item.price).format(0, 0);\r\n    const cant = numeral(item.cant).format(0, 0);\r\n    const matches630 = useMediaQuery('(min-width: 560px)');\r\n\r\n\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [id, setid] = useState({});\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const ele = useRef();\r\n\r\n\r\n    useEffect(() => {\r\n        setid({\r\n            id: item.id,\r\n            cod: item.id + \" cod\",\r\n            name: item.id + \" name\",\r\n            cost: item.id + \" cost\",\r\n            price: item.id + \" price\",\r\n            inv: item.id + \"inv\",\r\n            min: item.id + \"min\",\r\n        }\r\n        );\r\n    }, []);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClickSB = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const handleCloseSB = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight:'100%',\r\n            overflow: 'scroll'    \r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    const borrar = () => {\r\n        const eleNode = ele.current;\r\n        eleNode.style.display = \"none\";\r\n        setAnchorEl(null);\r\n        setOpen(!open);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <tr id={id.id} ref={ele}>\r\n                <td className=\"justi\" >{item.title}</td>\r\n                <td className=\"centrada\">${price}</td>\r\n                <td className=\"centrada\">{item.cant}</td>\r\n                <td>\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}><SettingsIcon fontSize=\"small\"/></Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={() => setModalIsOpen(true)}>Editar</MenuItem>\r\n                        <MenuItem onClick={() => handleClickSB()}>Borrar</MenuItem>\r\n                    </Menu>\r\n                </td>\r\n            </tr>\r\n\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleCloseSB(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n                <Alert severity=\"error\">\r\n                    <h5>¬øRealmente quieres borrar al cliente?</h5>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mr-auto\">\r\n                                <button className=\"btn btn success\" onClick={() => borrar()}>Si</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mL-auto\">\r\n                                <button className=\"btn btn error\" onClick={() => handleClickSB()}>No</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen}\r\n                shouldCloseOnEsc={true}\r\n                shouldCloseOnOverlayClick={false}\r\n                className={classes.modal}\r\n            >\r\n                <div className={`${classes.paper} mt-3`}>\r\n                    <header>\r\n                        <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                        <h4 className=\"h1T mt-5 ml-5\">Editar Producto</h4>\r\n                    </header>\r\n                    <main>\r\n                                <div className=\"row texto ml-5\">\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.cod}>C√≥digo: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.cod} id={id.cod} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.name}>Nombre: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.title} id={id.name} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.cost}>Costo compra: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={`$${costo}`} id={id.cost} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.price}>Precio venta: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={`$${price}`} id={id.price} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.inv}>Existencias: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value={item.cant} id={id.inv} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 \">\r\n                                        <label for={id.min}>Existencia minima: </label>\r\n                                        <input type=\"text\" className=\"form-control\" value=\"2\" id={id.min} disabled style={{ background: \"transparent\" }}></input>\r\n                                    </div>\r\n                                </div>\r\n                        <div className={classes.paper} className=\"row mb-2\">\r\n                            <div className=\"col-md-6 mt-2\">\r\n                                <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ItemProductoLT;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ItemProducto from './itemProductos';\r\nimport ItemProductoLT from './itemProductLT';\r\nimport numeral from 'numeral';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Pagination from '../TransVentas/Pagination';\r\n\r\nconst ListaProd = ({ items, random }) => {\r\n    const [valor, setValor] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(10);\r\n    const invTotal = numeral(random.cantP).format(0, 0);\r\n    const precioInv = numeral(random.inv).format(0, 0);\r\n\r\n    const [codArrow, setCodArrow] = useState(false);\r\n    const [nombreArrow, setNombreArrow] = useState(false);\r\n    const [costoArrow, setCostoArrow] = useState(false);\r\n    const [precioArrow, setPrecioArrow] = useState(false);\r\n    const [existArrow, setExistArrow] = useState(false);\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = valor.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            console.log(invTotal + \"jdsfkd \" + precioInv);\r\n            const cantEle = Math.floor(random.cantP / 20);\r\n            const extra = random.cantP - (cantEle * 20);\r\n            console.log(cantEle + \" extra: \" + extra);\r\n            const elem = [];\r\n            for(let i=0; i<items.length; i++){\r\n                console.log(items[i].price);\r\n                if (i <= extra) {\r\n                    /*\r\n                    \"imgUrl\": \"https://image.shutterstock.com/z/stock-photo-pair-of-white-sneakers-isolated-on-white-background-sport-shoes-712448377.jpg\",\r\n    \"name\": \"Sport Shoes\",\r\n    \"price\": 110\r\n                     */\r\n                    let id = \"ID \" + i;\r\n                    let title = items[i].name;\r\n                    let cod = Math.round(Math.random() * (2500000) + 500000);\r\n                    let price = items[i].price * 1000;\r\n                    let costo = (items[i].price * 10) * 81;\r\n                    let cant = (cantEle + 1);\r\n                    let category = items[i].name;\r\n                    let image = items[i].imgUrl;\r\n                    let ite = {\r\n                        'id': id,\r\n                        'cod': 'A0' + cod,\r\n                        'title': title,\r\n                        'price': price,\r\n                        'costo': costo,\r\n                        'cant': cant,\r\n                        'category': category,\r\n                        'min': 2,\r\n                        'image': image\r\n                    };\r\n                    elem.push(ite);\r\n                }\r\n                else {\r\n                    let id2 = items[i].id;\r\n                    let title2 = items[i].name;\r\n                    let cod2 = Math.round(Math.random() * (2500000) + 500000);\r\n                    let price2 = items[i].price * 1000;\r\n                    let costo2 = (items[i].price * 10) * 81;\r\n                    let cant2 = cantEle;\r\n                    let category2 = items[i].name;\r\n                    let image2 = items[i].imgUrl;\r\n                    let ite2 = {\r\n                        'id': id2,\r\n                        'cod': 'A0' + cod2,\r\n                        'title': title2,\r\n                        'price': price2,\r\n                        'costo': costo2,\r\n                        'cant': cant2,\r\n                        'category': category2,\r\n                        'min': 3,\r\n                        'image': image2\r\n                    };\r\n                    elem.push(ite2);\r\n                }\r\n            };\r\n            setValor(elem);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, []);\r\n\r\n    const compareCod = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.cod;\r\n        const cantB = b.cod;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareName = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.title;\r\n        const cantB = b.title;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareCosto = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.costo;\r\n        const cantB = b.costo;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const compareCant = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.cant;\r\n        const cantB = b.cant;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n\r\n    const comparePrecio = (a, b) => {\r\n        // Use toUpperCase() to ignore character casing\r\n        const cantA = a.price;\r\n        const cantB = b.price;\r\n\r\n        let comparison = 0;\r\n        if (cantA > cantB) {\r\n            comparison = -1;\r\n        } else if (cantA < cantB) {\r\n            comparison = 1;\r\n        }\r\n        return comparison;\r\n    }\r\n    const handleClick = (i) => {\r\n        switch (i) {\r\n            //Cod\r\n            case 0:\r\n                let cod = valor.sort(compareCod);\r\n                if(codArrow){\r\n                    setValor(cod.reverse());\r\n                }\r\n                else{\r\n                    setValor(cod);\r\n                }\r\n                setCodArrow(!codArrow);\r\n                setNombreArrow(false);\r\n                setCostoArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(false);\r\n                break;\r\n            //Nombre\r\n            case 1:\r\n                let name = valor.sort(compareName);\r\n                if(nombreArrow){\r\n                    setValor(name.reverse());\r\n                }\r\n                else{\r\n                    setValor(name);\r\n                }\r\n                setCodArrow(false);\r\n                setCostoArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(false);\r\n                setNombreArrow(!nombreArrow);\r\n                break;\r\n            //Costo\r\n            case 2:\r\n                let costo = valor.sort(compareCosto);\r\n                if(costoArrow){\r\n                    setValor(costo.reverse());\r\n                }\r\n                else{\r\n                    setValor(costo);\r\n                }\r\n                setCodArrow(false);\r\n                setNombreArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(false);\r\n                setCostoArrow(!costoArrow);\r\n                break;\r\n            //Precio\r\n            case 3:\r\n                let precio = valor.sort(comparePrecio);\r\n                if(precioArrow){\r\n                    setValor(precio.reverse());\r\n                }\r\n                else{\r\n                    setValor(precio);\r\n                }\r\n                setCodArrow(false);\r\n                setNombreArrow(false);\r\n                setCostoArrow(false);\r\n                setExistArrow(false);\r\n                setPrecioArrow(!precioArrow);\r\n                break;\r\n            //Existencia\r\n            case 4:\r\n                let exist = valor.sort(compareCant);\r\n                if(existArrow){\r\n                    setValor(exist.reverse());\r\n                }\r\n                else{\r\n                    setValor(exist);\r\n                }\r\n                setCodArrow(false);\r\n                setNombreArrow(false);\r\n                setCostoArrow(false);\r\n                setPrecioArrow(false);\r\n                setExistArrow(!existArrow);\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"table table-bordered bgTable\" style={{ alignContent: \"center\" }}>\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\"></th>\r\n                        <th className=\"listE\" onClick={() => handleClick(0)}>Cod{codArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(2)}>Costo{costoArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(3)}>Precio{precioArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(4)}>Inv.{existArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentPosts.map(val => (\r\n                        <ItemProducto key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n                <tfoot >\r\n                    <tr className=\"fooT\">\r\n                        <td className=\"centrada\" colSpan=\"4\" style={{ fontWeight: \"bold\" }}>Total inventario</td>\r\n                        <td className=\"centrada\">${precioInv}</td>\r\n                        <td className=\"centrada\">{invTotal}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n\r\n            <table className=\"table table-bordered ltTable\">\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\" onClick={() => handleClick(1)}>Nombre{nombreArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(3)}>Precio{precioArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\" onClick={() => handleClick(4)}>Inv.{existArrow ? <ArrowDropDownIcon /> : <ArrowDropUpIcon />}</th>\r\n                        <th className=\"listE\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {currentPosts.map(val => (\r\n                        <ItemProductoLT key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n                <tfoot >\r\n                    <tr className=\"fooT\">\r\n                        <td className=\"centrada\" colSpan=\"2\" style={{ fontWeight: \"bold\" }}>Total inventario</td>\r\n                        <td className=\"centrada\">${precioInv}</td>\r\n                        <td className=\"centrada\">{invTotal}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            {valor.length > 10 ?\r\n                <Pagination\r\n                    postsPerPage={postsPerPage}\r\n                    totalPosts={valor.length}\r\n                    paginate={paginate}\r\n                    nextPage={nextPage}\r\n                    prevPage={prevPage}\r\n                    currentPage={currentPage}\r\n                /> : <></>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ListaProd;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ListaProd from './ListaProd';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst Productos = ({ random }) => {\r\n    const [item, setItem] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data[0]);\r\n                let a = result.data;\r\n                let res = (a).concat(a);\r\n                res.push(a[0]);\r\n                res.push(a[1]);\r\n                setItem(res);\r\n                console.log(res.length + \" fkdslkdsf\");\r\n                setLoad(true)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    if (Load) {\r\n        return (\r\n            <div className=\"table-responsive-sm prod\">\r\n                <h4 className=\"titulo\">Inventario:</h4>\r\n                <ListaProd items={item} random={random} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Productos;","import React from 'react';\r\n\r\nconst ItemProducto = ({ item }) => {\r\n    return (\r\n        \r\n            <tr id={item.id}>\r\n                <td className=\"centrada\"><img className=\"\" src={item.image} style={{ height: '40px', alignSelf:\"center\"}}></img></td>\r\n                <td className=\"justi\" >{item.cod}</td> \r\n                <td className=\"justi\" >{item.title}</td> \r\n                <td className=\"centrada\">${item.costo}</td>\r\n                <td className=\"centrada\">${item.price}</td>\r\n                <td className=\"centrada\">{item.cant}</td>\r\n                <td className=\"centrada\">2</td>\r\n            </tr>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ItemProducto;\r\n\r\n/*\r\n  'id': id,\r\n                        'cod': 'A0' + cod,\r\n                        'title': title,\r\n                        'price': price,\r\n                        'costo': costo,\r\n                        'cant': cant,\r\n                        'category': category,\r\n                        'min': 2,\r\n                        'image': image\r\n<th className=\"listE\"></th>\r\n                        <th className=\"listE\">Cod</th>\r\n                        <th className=\"listE\">Nombre</th>\r\n                        <th className=\"listE\">Costo</th>\r\n                        <th className=\"listE\">Precio</th>\r\n                        <th className=\"listE\">Existencias</th>\r\n                        <th className=\"listE\">Inv. min</th> */","import React from 'react';\r\n\r\nconst ItemProductoLT = ({ item }) => {\r\n    return (\r\n        \r\n            <tr id={item.id}>\r\n                <td className=\"centrada\">{item.cod}</td>\r\n                <td className=\"justi\" >{item.title}</td> \r\n                <td className=\"centrada\">${item.price}</td>\r\n                <td className=\"centrada\">{item.cant}</td>\r\n               \r\n            </tr>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ItemProductoLT;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ItemProducto from './itemProductosBI';\r\nimport ItemProductoLT from './itemProductLTBI';\r\nimport numeral from 'numeral';\r\nimport Pagination from '../TransVentas/Pagination';\r\n\r\nconst ListaProd = ({ items, random }) => {\r\n    const [valor, setValor] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const elem = [];\r\n            items.forEach(element => {\r\n                console.log(element.price);\r\n                    let id = element.id;\r\n                    let title = element.name;\r\n                    let cod = Math.round(Math.random() * (2500000) + 500000);\r\n                    let price = numeral(element.price * 1000).format(0, 0);\r\n                    let costo = numeral((element.price * 10) * 81).format(0, 0);\r\n                    let category = element.name;\r\n                    let image = element.imgUrl;\r\n                    let ite = {\r\n                        'id': id,\r\n                        'cod': 'A0' + cod,\r\n                        'title': title,\r\n                        'price': price,\r\n                        'costo': costo,\r\n                        'cant': 1,\r\n                        'category': category,\r\n                        'min': 2,\r\n                        'image': image\r\n                    };\r\n                    elem.push(ite);                \r\n            });\r\n            setValor(elem);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }, []);\r\n\r\n   \r\n    return (\r\n        <>\r\n            <table className=\"table table-bordered bgTable\" style={{alignContent:\"center\"}}>\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\"></th>\r\n                        <th className=\"listE\">Cod</th>\r\n                        <th className=\"listE\">Nombre</th>\r\n                        <th className=\"listE\">Costo</th>\r\n                        <th className=\"listE\">Precio</th>\r\n                        <th className=\"listE\">Existencias</th>\r\n                        <th className=\"listE\">Inv. min</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {valor.map(val => (\r\n                        <ItemProducto key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"table table-bordered ltTable\">\r\n                <thead>\r\n                    <tr style={{ textAlign: \"center\" }}>\r\n                        <th className=\"listE\">Cod</th>\r\n                        <th className=\"listE\">Nombre</th>\r\n                        <th className=\"listE\">Precio</th>\r\n                        <th className=\"listE\">Existencias</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {valor.map(val => (\r\n                        <ItemProductoLT key={val.id} item={val} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default ListaProd;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ListaProd from './ListaProdBI';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst ProductosBI = ({ random }) => {\r\n    const [item, setItem] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data[0]);\r\n                let res = [];\r\n                res.push(result.data[0]);\r\n                res.push(result.data[1]);\r\n                res.push(result.data[2]);\r\n                res.push(result.data[3]);\r\n                res.push(result.data[4]);\r\n                setItem(res);\r\n                setLoad(true)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n    if (Load) {\r\n        return (\r\n            <div className=\"table-responsive-sm prod\">\r\n                <h4 className=\"titulo\">Productos con bajo stock:</h4>\r\n                <ListaProd items={item} random={random} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductosBI;","import React from 'react';\r\nimport './Consrtruccion.css';\r\n\r\nconst Construccion = () => {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"loading\" style={{overflow:\"hidden\", height:\"500px\"}}>\r\n                <h1 className=\"errorTitulo mb-5\">No disponible</h1>\r\n                <h5 className=\"errorDescripcion\">Lo lamento, esta secci√≥n no esta presente en la versi√≥n de prueba <b>:(</b></h5>\r\n                <div className=\"gears\">\r\n                    <div className=\"gear one\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                    <div className=\"gear two\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                    <div className=\"gear three\">\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                        <div className=\"bar\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Construccion;","import React, { useState, useEffect, useRef } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport axios from 'axios';\r\nimport product from './product.png';\r\nimport Modal from 'react-modal';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Productos from './Productos';\r\nimport ProductosBI from '../bajoInventario/ProductosBI';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\nModal.setAppElement('#root');\r\nconst ProdBase = () => {\r\n    const [random, setRandom] = useState({});\r\n    const [Load, setLoad] = useState(false);\r\n    const [texto, setTexto] = useState('');\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const matches630 = useMediaQuery('(min-width: 560px)');\r\n    const matches = useMediaQuery('(min-width:766px)')\r\n    const {datos} = useParams()\r\n\r\n    /* {\"id\":1,\r\n    \"title\":\"Fjallraven - Foldsack No. 1 Backpack, Fits 15 Laptops\",\r\n    \"price\":109.95,\r\n    \"description\":\"Your perfect pack for everyday use and walks in the forest. Stash your laptop (up to 15 inches) in the padded sleeve, your everyday\",\r\n    \"category\":\"men clothing\",\r\n    \"image\":\"https://fakestoreapi.com/img/81fPKd-2AYL._AC_SL1500_.jpg\"} */\r\n    useEffect(() => {\r\n\r\n        let p = datos.indexOf(\"p\");\r\n        let i = datos.indexOf(\"i\");\r\n        let c = datos.indexOf(\"c\");\r\n        const ele = {\r\n            cantP: datos.slice(p + 1, i),\r\n            inv: datos.slice(i + 1, c),\r\n        }\r\n        setRandom(ele);\r\n        setLoad(true);\r\n\r\n    }, []);\r\n\r\n    const handleClick = (a) => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n\r\n        setTexto(a);\r\n    };\r\n\r\n    const handleClick2 = (a) => {\r\n        setOpen(true);\r\n        setModalIsOpen(false);\r\n        setTexto(a);\r\n        /* const taskNode = taskContent.current;\r\n        taskNode.innerHTML = '';\r\n        setTimeout(typeWriter, speed); */\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\",\r\n            maxHeight: \"800px\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    if (Load) {\r\n        return (\r\n            <>\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-1 newProd\">\r\n                            <button className=\"btn btn-success \" onClick={() => setModalIsOpen(true)} style={{ borderRadius: \"25px\" }}><AddIcon />Nuevo</button>\r\n                        </div>\r\n                        <div className=\"col-md-6 \">\r\n                            <div className=\"input-group mb-3 inputBuscar btm\" >\r\n                                <button className=\"btn btn-primary\" onClick={() => handleClick('No implementado en la versi√≥n de prueba')} ><SearchIcon /> </button>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar por cliente\" ></input>\r\n                            </div>\r\n                        </div>\r\n                        <Snackbar open={open}\r\n                            autoHideDuration={6000}\r\n                            TransitionComponent={TransitionLeft}\r\n                            onClose={(e) => handleClose(e)}\r\n                            anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                            key={\"top\" + \"center\"}\r\n                        >\r\n\r\n                            <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                                {texto}\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </div>\r\n                    <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#Inventario\">Inventario</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#bajo\">Bajo stock</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\" onClick={() => handleClick2('No implementado en la versi√≥n de prueba')}>Movimientos de inventario</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\" onClick={() => handleClick2('No implementado en la versi√≥n de prueba')}>K√°rdex</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content\">\r\n                        <div id=\"Inventario\" className=\"container tab-pane active\"><br />\r\n                            <Productos random={random} />\r\n                        </div>\r\n                        <div id=\"bajo\" className=\"container tab-pane fade\"><br />\r\n                            <ProductosBI random={random} />\r\n                        </div>\r\n                        <div id=\"extra\" className=\"container tab-pane fade\" style={{ height: \"100%\" }}><br />\r\n                            <Construccion />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n\r\n\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3`}>\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T mt-4 ml-5\">A√±adir Producto</h2>\r\n                        </header>\r\n                        <main> <div className=\"row \">\r\n                            {matches630 ?\r\n                                <div className=\"col-sm-4 mt-3\">\r\n                                    <img className=\"imagen\" src={product}></img>\r\n                                </div>\r\n                                :\r\n                                <div></div>}\r\n                            <div className=\"col-sm-8 mt-3\">\r\n                                <div className=\"row texto ml-2\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"code\">Codigo: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"code\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"name\">Producto: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"descripcion\">descripcion: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"descripcion\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"prov\">Proveedor: </label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"prov\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"costoC\">Costo compra: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"costoC\" min=\"0\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <label for=\"costoV\">Valor venta: </label>\r\n                                        <input type=\"number\" className=\"form-control\" id=\"costoV\" min=\"0\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <input type=\"file\" className=\"form-control-file border\" name=\"file\" style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            {matches ?\r\n                                <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-success boton mt-5\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <button className=\"btn btn-success boton\" onClick={() => setModalIsOpen(false)}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </main>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdBase;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nconst ItemVenta = ({ item }) => {\r\n    return (\r\n            <tr id={item.id} >\r\n                <td style={{fontWeight: 'bold'}} >{item.title}</td>\r\n                <td style={{fontWeight: 'bold'}}>${item.cant}</td>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default ItemVenta;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ItemVenta from './ReporteItemVenta';\r\n\r\nconst ReporteVentaLista = ({ item }) => {\r\n    console.log(item.id);\r\n\r\n    return (\r\n        <div className=\"table-responsive-md listaReporte\" style={{background: \"rgb(39, 41, 61)\", overflowY:\"hidden\"}}>\r\n            <table className=\"table text-white table-bordered\">\r\n                <tbody>\r\n                    {item.map(item => (\r\n                        <ItemVenta key={item.id} item={item} />\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReporteVentaLista;","import React, { useState, useEffect } from 'react';\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport numeral from 'numeral';\r\nimport ReporteVentaLista from './ReporteVentaLista';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport axios from 'axios';\r\nconst VG = () => {\r\n    const [data, setData] = useState({});\r\n    const [totalV, setTotalV] = useState(0);\r\n    const [totalG, setTotalG] = useState(0);\r\n    const [promVenta, setPromVenta] = useState(0);\r\n    const [margen, setMargen] = useState(0);\r\n    const matches = useMediaQuery('(min-width:500px)');\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n    const [ventasDia, setVentasDia] = useState([]);\r\n    const [item, setItem] = useState([]);\r\n    const [ventasProd, setVentasProd] = useState([]);\r\n    const [ventasCat, setVentasCat] = useState([]);\r\n    const [gananciasCat, setgananciasCat] = useState([]);\r\n    const [ventasCatGrap, setVentasCatGrap] = useState({});\r\n    const [gananciasCatGrap, setGananciasCatGrap] = useState({});\r\n\r\n    const options1 = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n            position: 'right',\r\n        },\r\n        height: \"400px\",\r\n        width: \"900px\",\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 5000000\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n    }\r\n    const options2 = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        legend: {\r\n            position: 'bottom',\r\n        },\r\n        height: \"400px\",\r\n        width: \"900px\",\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 5000000\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n    }\r\n\r\n    const optionsDonat = {\r\n        legend: {\r\n            display: true,\r\n            color: \"#ffffff\",\r\n            position: \"right\"\r\n        },\r\n    }\r\n    const optionsDonat2 = {\r\n        legend: {\r\n            display: false,\r\n        },\r\n    }\r\n    const cat = ['Bebidas', 'Snacks', 'Cigarros', 'Leches', 'Dulces', 'Congelados', 'Otros...'];\r\n    useEffect(() => {\r\n\r\n        const fetchItems = async () => {\r\n            try {\r\n                const result = await axios(\r\n                    `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                );\r\n                console.log(result.data);\r\n                let res = result.data;\r\n                let listaP = [];\r\n                for (let i = 0; i < 7; i++) {\r\n                    let c3 = Math.round(Math.random() * (2000000) + 1000000);\r\n                    console.log(\"prueba dentro del for: \" + res[i]);\r\n                    let c = {\r\n                        id: \"c\" + i,\r\n                        title: res[i].name,\r\n                        cant: numeral(c3).format(0, 0)\r\n                    }\r\n                    listaP.push(c);\r\n                }\r\n                setVentasProd(listaP);\r\n\r\n                const labels = ['d√≠a 1', 'd√≠a 2', 'd√≠a 3', 'd√≠a 4', 'd√≠a 5', 'd√≠a 6', 'd√≠a 7'];\r\n                const datosVentas = [];\r\n                const datosGanancias = [];\r\n                let suma = 0;\r\n                let sumaG = 0;\r\n                for (let i = 0; i < 7; i++) {\r\n                    let a = Math.round(Math.random() * (3000000) + 2000000);\r\n                    let g = Math.round((a * 75) / 100);\r\n                    datosVentas.push(a);\r\n                    datosGanancias.push(g);\r\n                    suma = suma + a;\r\n                    sumaG = sumaG + g;\r\n                }\r\n                let p = Math.round(suma / 2158);\r\n                let m = Math.round((sumaG * 100) / suma);\r\n                setPromVenta(numeral(p).format(0, 0));\r\n                setMargen(numeral(m).format(0, 0));\r\n                setTotalG(numeral(sumaG).format(0, 0));\r\n                setTotalV(numeral(suma).format(0, 0));\r\n                const datitos = {\r\n                    labels: labels,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Ventas',\r\n                            data: datosVentas,\r\n                            backgroundColor: 'rgb(255, 99, 132)',\r\n                        },\r\n                        {\r\n                            label: 'Ganancias',\r\n                            data: datosGanancias,\r\n                            backgroundColor: 'rgb(54, 162, 235)',\r\n                        },\r\n                    ],\r\n                }\r\n                let maxV = Math.round((suma / 7) - 900000);\r\n                let listaV = [];\r\n                let listaG = [];\r\n                let listaC = [];\r\n                let labelsVCat = [];\r\n                let dataVCat = [];\r\n                let labelsGCat = [];\r\n                let dataGCat = [];\r\n                let por = [50, 92];\r\n                for (let i = 0; i < 7; i++) {\r\n                    let a1 = Math.round(Math.random() * (maxV) + 900000);\r\n                    let b2 = Math.round(Math.random() * (2000000) + 1000000);\r\n                    let gh = i%2;\r\n                    let d4 = Math.round((b2 * por[gh]) / 100);\r\n                    let di = i + 1;\r\n                    let a = {\r\n                        id: \"a\" + i,\r\n                        title: \"d√≠a \" + di,\r\n                        cant: numeral(a1).format(0, 0)\r\n                    }\r\n                    let b = {\r\n                        id: \"b\" + i,\r\n                        title: cat[i],\r\n                        cant: numeral(b2).format(0, 0)\r\n                    }\r\n\r\n                    let d = {\r\n                        id: \"d\" + i,\r\n                        title: cat[i],\r\n                        cant: numeral(d4).format(0, 0)\r\n                    }\r\n                    listaV.push(a);\r\n                    listaC.push(b);\r\n                    listaG.push(d);\r\n                    labelsVCat.push(b.title);\r\n                    dataVCat.push(b2);\r\n                    labelsGCat.push(d.title);\r\n                    dataGCat.push(d4);\r\n                }\r\n                setVentasDia(listaV);\r\n                setVentasCatGrap({\r\n                    labels: labelsVCat,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Venta por categor√≠a',\r\n                            data: dataVCat,\r\n                            backgroundColor: [\r\n                                '#FF6384',\r\n                                '#9933ff',\r\n                                '#36A2EB',\r\n                                '#FFCE56',\r\n                                '#66ff33',\r\n                                '#ff6600',\r\n                                '#cc3399'\r\n                            ],\r\n                        }\r\n                    ]\r\n                });\r\n                setGananciasCatGrap({\r\n                    labels: labelsGCat,\r\n                    datasets: [\r\n                        {\r\n                            label: 'Ganancias por categor√≠a',\r\n                            data: dataGCat,\r\n                            backgroundColor: [\r\n                                '#FF6384',\r\n                                '#9933ff',\r\n                                '#36A2EB',\r\n                                '#FFCE56',\r\n                                '#66ff33',\r\n                                '#ff6600',\r\n                                '#cc3399'\r\n                            ],\r\n                        }\r\n                    ]\r\n                });\r\n                setVentasCat(listaC);\r\n                setgananciasCat(listaG);\r\n                setData(datitos);\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        };\r\n        fetchItems();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-lg-12 mt-4\" style={{ minHeight: \"300px\" }}>\r\n                    <Bar data={data}\r\n                        options={matches ? options1 : options2}\r\n                    />\r\n                </div>\r\n                <div className=\"container-fluid mt-3\">\r\n                    <div className=\"card-group\">\r\n                        <div className=\"card w-45\" style={{ backgroundColor: \"rgb(39, 41, 61)\", border: \"1px solid rgb(255,255,255)\", borderRadius: \"25px\" }}>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"card-body\" style={{ padding: 0 }}>\r\n                                    <div className=\"media d-flex\">\r\n                                        <div className=\"align-self-center\">\r\n                                            <AccountBalanceIcon className=\"float-left\" style={{ fontSize: \"4rem\", paddingLeft: \"1.25rem\" }} />\r\n                                        </div>\r\n                                        <div className=\"media-body text-right\" style={{ padding: \"1.25rem\" }}>\r\n                                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas</h5>\r\n                                                Total: {totalV}<br />\r\n                                                Cantidad de ventas: 2,158 <br />\r\n                                                Ventas promedio: {promVenta}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"mr-5\"></span>\r\n                        <div className=\"card w-45\" style={{ backgroundColor: \"rgb(39, 41, 61)\", border: \"1px solid rgb(255,255,255)\", borderRadius: \"25px\" }}>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"card-body\" style={{ padding: 0 }}>\r\n                                    <div className=\"media d-flex\">\r\n                                        <div className=\"align-self-center\">\r\n                                            <LocalAtmIcon className=\"float-left\" style={{ fontSize: \"4.5rem\", paddingLeft: \"1.25rem\" }} />\r\n                                            <i ></i>\r\n                                        </div>\r\n                                        <div className=\"media-body text-right\" style={{ padding: \"1.25rem\" }}>\r\n                                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ganancias</h5>\r\n                                            <div style={{ verticalAlign: \"middle\" }}>\r\n                                                Total: {totalG}<br />\r\n                                                    margen de utilidad promedio: {margen}%<br /><br />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por d√≠a en el periodo: </h5>\r\n                            <ReporteVentaLista item={ventasDia} />\r\n                        </div>\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por productos en el periodo: </h5>\r\n                            <ReporteVentaLista item={ventasProd} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por d√≠a en el periodo: </h5>\r\n                            <ReporteVentaLista item={ventasCat} />\r\n                        </div>\r\n                        <div className=\"col-lg-6 mt-4\">\r\n                            <h5 style={{ color: \"rgb(131, 181, 255)\", fontWeight: \"bold\", fontStyle: \"italic\" }}>Ventas por productos en el periodo: </h5>\r\n                            <ReporteVentaLista item={gananciasCat} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{ marginBottom: \"3%\" }}>\r\n                        <div className=\"col-lg-5 mt-4 mr-0 pr-0\">\r\n                            <Doughnut data={ventasCatGrap}\r\n                                options={optionsDonat2} style={{ background: \"rgb(39, 41, 61);\" }} />\r\n                        </div>\r\n                        <div className=\"col-lg-2 mt-4 p-0\" style={{ textAlign: \"center\", alignSelf:\"center\"}}>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item listaColor\">\r\n                                    <div className=\"rectangle\" style={{background:\"#FF6384\"}}></div> <span>{cat[0]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#9933ff\"}}></div> <span>{cat[1]}</span></li>\r\n                                <li className=\"list-group-item listaColor\">  <div className=\"rectangle\" style={{background:\"#36A2EB\"}}></div> <span>{cat[2]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#FFCE56\"}}></div> <span>{cat[3]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#66ff33\"}}></div> <span>{cat[4]}</span></li>\r\n                                <li className=\"list-group-item listaColor\">  <div className=\"rectangle\" style={{background:\"#ff6600\"}}></div> <span>{cat[5]}</span></li>\r\n                                <li className=\"list-group-item listaColor\"><div className=\"rectangle\" style={{background:\"#cc3399\"}}></div> <span>{cat[6]}</span></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-lg-5 mt-4 ml-0 pl-0\">\r\n                            <Doughnut data={gananciasCatGrap}\r\n                                options={optionsDonat2} style={{ background: \"rgb(39, 41, 61);\" }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default VG;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from 'axios';\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport VG from './VG';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Calendar, utils } from \"react-modern-calendar-datepicker\";\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteVenta = () => {\r\n    const matches = useMediaQuery('(min-heigh:500px)');\r\n\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n    const [desde, setDesde] = useState('');\r\n    const [hasta, setHasta] = useState('');\r\n\r\n    /*  let mesI = today.getMonth();\r\n        if (mesI < 10) {\r\n            mesI = \"0\" + mesI;\r\n        }\r\n        let mesF = today.getMonth() + 1;\r\n        if (mesF < 10) {\r\n            mesF = \"0\" + mesF;\r\n        }\r\n        let day = today.getDate();\r\n        if (today.getDate() < 10) {\r\n            day = \"0\" + today.getDate();\r\n        }\r\n        const fechaF = today.getFullYear() + \"-\" + mesF + \"-\" + day;\r\n        const fechaI = today.getFullYear() + \"-\" + mesI + \"-\" + day;\r\n        const options = {\r\n            legend: {\r\n                display: true,\r\n                color: \"#ffffff\"\r\n    \r\n            },\r\n        } \r\n    \r\n        function compare(a, b) {\r\n            // Use toUpperCase() to ignore character casing\r\n            const cantA = a.cant;\r\n            const cantB = b.cant;\r\n    \r\n            let comparison = 0;\r\n            if (cantA > cantB) {\r\n                comparison = -1;\r\n            } else if (cantA < cantB) {\r\n                comparison = 1;\r\n            }\r\n            return comparison;\r\n        }\r\n    \r\n        const color = ['#FF6384', '#9933ff', '#36A2EB', '#FFCE56', '#66ff33', '#ff6600', '#cc3399', '#ff99ff', '#dfbf9f', '#80ffff'];\r\n        useEffect(() => {\r\n    \r\n            const fetchItems = async () => {\r\n                try {\r\n                    const result = await axios(\r\n                        `https://my-json-server.typicode.com/jubs16/Products/Products`\r\n                    );\r\n                    console.log(result);\r\n                    let a = result.data;\r\n                    let res = (a).concat(a);\r\n                    res.push(a[0]);\r\n                    res.push(a[1]);\r\n                    setLoad(true);\r\n                    if (result.status === 200) {\r\n                        const datas = [];\r\n                        const value = [];\r\n                        const datasMenor = [];\r\n                        const valueMenor = [];\r\n                        const lab = [];\r\n                        const labMenor = [];\r\n                        for (let i = 0; i < 10; i++) {\r\n                            let valor = Math.round(Math.random() * (2500000) + 500000);\r\n                            let na = res[i].name;\r\n                            let naC = res[i].name.slice(0, 15) + '...';\r\n                            let menor = Math.round(Math.random() * (150000) + 10000);\r\n                            let j = i + 10;\r\n                            let nam = res[j].name;\r\n                            let cliente = {\r\n                                id: i,\r\n                                nombre: na,\r\n                                cant: valor,\r\n                                color: color[i]\r\n                            }\r\n                            let menos = {\r\n                                id: j,\r\n                                nombre: nam,\r\n                                cant: menor,\r\n                                color: color[i]\r\n                            }\r\n                            console.log(i);\r\n                            lab.push(naC);\r\n                            labMenor.push(nam);\r\n                            datas.push(valor);\r\n                            value.push(cliente);\r\n                            datasMenor.push(menor);\r\n                            valueMenor.push(menos);\r\n                        }\r\n                        const val = value.sort(compare);\r\n                        const va = valueMenor.sort(compare);\r\n                        setItem(val);\r\n                        setItemMenor(va);\r\n                        console.log(val);\r\n                        const dat = {\r\n                            labels: lab,\r\n                            datasets: [{\r\n                                data: datas,\r\n                                backgroundColor: [\r\n                                    '#FF6384',\r\n                                    '#9933ff',\r\n                                    '#36A2EB',\r\n                                    '#FFCE56',\r\n                                    '#66ff33',\r\n                                    '#ff6600',\r\n                                    '#cc3399',\r\n                                    '#ff99ff',\r\n                                    '#dfbf9f',\r\n                                    '#80ffff'\r\n                                ],\r\n    \r\n                            }],\r\n    \r\n                        };\r\n                        const datMenor = {\r\n                            labels: labMenor,\r\n                            datasets: [{\r\n                                data: datasMenor,\r\n                                backgroundColor: [\r\n                                    '#FF6384',\r\n                                    '#9933ff',\r\n                                    '#36A2EB',\r\n                                    '#FFCE56',\r\n                                    '#66ff33',\r\n                                    '#ff6600',\r\n                                    '#cc3399',\r\n                                    '#ff99ff',\r\n                                    '#dfbf9f',\r\n                                    '#80ffff'\r\n                                ],\r\n    \r\n                            }],\r\n    \r\n                        };\r\n                        setdata(dat);\r\n                        setdataMenor(datMenor);\r\n                        setLoading(true);\r\n                        console.log(dat.data)\r\n                    }\r\n    \r\n                } catch (error) {\r\n                    console.log(error);\r\n                    setError(true);\r\n    \r\n                }\r\n            }\r\n            fetchItems();\r\n        }, []); */\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI-1);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            let mon=month;\r\n            let mesIni = mI;\r\n            if(mesIni<10){\r\n                mesIni=\"0\"+mesIni;\r\n            }\r\n            if(mon<10){\r\n                mon=\"0\"+mon;\r\n            }\r\n            \r\n            setDesde(`${year}-${mesIni}-${dayI}`);\r\n            setHasta(`${year}-${mon}-0${day}`);\r\n            console.log(`${year}-${mesIni}-${dayI}`);\r\n            console.log(`${year}-${mon}-0${day}`);\r\n            setHasta()\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            let mon=month;\r\n            let da = d;\r\n            let dayH = day;\r\n            \r\n            if(mon<10){\r\n                mon=\"0\"+mon;\r\n            }\r\n            if(da<10){\r\n                da = \"0\"+da;\r\n            }\r\n            if(dayH<10){\r\n                dayH = \"0\"+dayH;\r\n            }\r\n\r\n            \r\n            setDesde(`${year}-${mon}-${da}`);\r\n            setHasta(`${year}-${mon}-${dayH}`);\r\n            console.log(`${year}-${mon}-${da}`);\r\n            console.log(`${year}-${mon}-${dayH}`);\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n\r\n    const onChange = (q) =>{\r\n        console.log(q);\r\n        setDesde(q);\r\n    }\r\n    const onChangeH = (q) =>{\r\n        console.log(q);\r\n        setHasta(q);\r\n    }\r\n\r\n    if (Loading && !error) {\r\n        return (\r\n            <>\r\n                <div className=\"row\">\r\n                <div className=\"col-xl-12\">\r\n                <h4 className=\"titulo\" style={{textAlign:\"center\"}}>Seleccione periodo:</h4>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                    <DatePicker\r\n                                inputPlaceholder={range}\r\n                                value={selectedDayRange}\r\n                                onChange={setSelectedDayRange}\r\n                                maximumDate={utils().getToday()}\r\n                                inputClassName=\"fechasInput\"\r\n                            />\r\n                        {/* {matches ?\r\n                            <DatePicker\r\n                                inputPlaceholder={range}\r\n                                value={selectedDayRange}\r\n                                onChange={setSelectedDayRange}\r\n                                maximumDate={utils().getToday()}\r\n                                inputClassName=\"fechasInput\"\r\n                            />\r\n                            :\r\n                            <div className=\"row\">\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                    <label for=\"desde\">Desde: </label>\r\n                                    <input type=\"date\" id=\"desde\" name=\"desde\" value={desde} \r\n                                    onChange={(e) => setDesde(e.target.value)} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"></input>\r\n                                    </div>\r\n                                <div className=\"col-lg-6 col-sm-12\">\r\n                                <label for=\"hasta\">Hasta: </label>\r\n                                    <input type=\"date\" id=\"hasta\" name=\"hasta\" value={hasta} \r\n                                    onChange={(e) => setHasta(e.target.value)} required pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\"></input>\r\n                                </div>\r\n                            </div>\r\n\r\n                        } */}\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"col-lg-6\" style={{ display: \"flex\", paddingBottom: \"5%\", height: \"90%\", paddingBottom: \"0\", marginTop: \"5%\" }}> */}\r\n\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n\r\n\r\n                <div style={{ width: \"90%\", marginLeft: \"5%\" }}>\r\n\r\n                    <VG />\r\n                </div>\r\n            </>\r\n\r\n        )\r\n    }\r\n    else {\r\n        if (error) {\r\n            return (\r\n                <div className=\"contenedor\"> Error</div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"contenedor center\" >\r\n                    <CircularProgress />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\nexport default ReporteVenta;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteCompra = () => {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI-1);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12\">\r\n                <h4 className=\"titulo\" style={{textAlign:\"center\"}}>Seleccione periodo:</h4>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                        <DatePicker\r\n                            inputPlaceholder={range}\r\n                            value={selectedDayRange}\r\n                            onChange={setSelectedDayRange}\r\n                            maximumDate={utils().getToday()}\r\n                            inputClassName=\"fechasInput\"\r\n                        />\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Compras por productos</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Compras por categoria</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Compras por Proveedor</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"tab-content\">\r\n                    <div id=\"#home\" className=\"container tab-pane active\"><br />\r\n                            <Construccion />\r\n                        </div>\r\n                        <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                            <Construccion />\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n                </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReporteCompra;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteCliente = () => {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI-1);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12\">\r\n                <h4 className=\"titulo\" style={{textAlign:\"center\"}}>Seleccione periodo:</h4>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                        <DatePicker\r\n                            inputPlaceholder={range}\r\n                            value={selectedDayRange}\r\n                            onChange={setSelectedDayRange}\r\n                            maximumDate={utils().getToday()}\r\n                            inputClassName=\"fechasInput\"\r\n                        />\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Ventas por clientes</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Clientes con creditos activos</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div id=\"#home\" className=\"container tab-pane active\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                    <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                </div>\r\n            </>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReporteCliente;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport DatePicker from \"react-modern-calendar-datepicker\";\r\nimport { utils } from \"react-modern-calendar-datepicker\";\r\nimport Construccion from '../Construccion/Contruccion';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ReporteProductos = () => {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedDayRange, setSelectedDayRange] = useState({\r\n        from: null,\r\n        to: null\r\n    });\r\n    const [range, setRange] = useState();\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 7) {\r\n            let mI = month - 1;\r\n            let res = 6 - day;\r\n            let mesI = mesTotal(mI-1);\r\n\r\n            let dayI = mesI - res;\r\n            const fI = {\r\n                day: dayI,\r\n                month: mI,\r\n                year: year\r\n            }\r\n            const fF = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechas =\r\n            {\r\n                from: fI,\r\n                to: fF\r\n            };\r\n\r\n            setSelectedDayRange(fechas);\r\n            setRange(`Desde ${dayI}/${mI}/${year} Hasta ${day}/${month}/${year}`);\r\n\r\n        }\r\n        else {\r\n            let d = day - 6;\r\n            const fi = {\r\n                day: d,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const ff = {\r\n                day: day,\r\n                month: month,\r\n                year: year\r\n            }\r\n            const fechasT =\r\n            {\r\n                from: fi,\r\n                to: ff\r\n            };\r\n            setRange(`Desde ${d}/${month}/${year} Hasta ${day}/${month}/${year}`);\r\n            setSelectedDayRange(fechasT);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const formatInputValue = () => {\r\n        if (selectedDayRange == null) {\r\n            return ``;\r\n        }\r\n        else {\r\n            return `Desde ${selectedDayRange.from.day}/${selectedDayRange.from.month}/${selectedDayRange.from.year} Hasta ${selectedDayRange.to.day}/${selectedDayRange.to.month}/${selectedDayRange.to.year}`;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <div className=\"row\">\r\n                <div className=\"col-xl-12\">\r\n                <h4 className=\"titulo\" style={{textAlign:\"center\"}}>Seleccione periodo:</h4>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\"></div>\r\n                    <div className=\"col-lg-6\">\r\n                        <DatePicker\r\n                            inputPlaceholder={range}\r\n                            value={selectedDayRange}\r\n                            onChange={setSelectedDayRange}\r\n                            maximumDate={utils().getToday()}\r\n                            inputClassName=\"fechasInput\"\r\n                        />\r\n                        <button className=\"btn btn-success\" onClick={() => handleClick()} style={{ borderRadius: \"25px\" }}><Search /></button>\r\n                    </div>\r\n                    <div className=\"col-lg-2\">\r\n\r\n                    </div>\r\n                </div>\r\n                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#home\">Ventas por productos</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" data-toggle=\"tab\" href=\"#extra\">Ventas por categoria</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"tab-content\">\r\n                    <div id=\"#home\" className=\"container tab-pane active\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                    <div id=\"extra\" className=\"container tab-pane fade\"><br />\r\n                        <Construccion />\r\n                    </div>\r\n                </div>\r\n            </>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    ¬°Alerta! Bot√≥n no implementado en la versi√≥n de prueba\r\n                                                    </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReporteProductos;","import React, { useState, useEffect } from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nfunction TransitionLeft(props) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\n\r\n\r\nconst TimelinePerfil = ({ item }) => {\r\n  const [fechas, setFechas] = useState([]);\r\n  const [texto, setTexto] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n  const mesTotal = (mesA) => {\r\n    if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n      return 31;\r\n    }\r\n    else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n      return 30;\r\n    }\r\n    else {\r\n      return 28;\r\n    }\r\n  }\r\n  const matches = useMediaQuery('(min-width:400px)');\r\n  const matches2 = useMediaQuery('(min-width:330px)');\r\n\r\n  useEffect(() => {\r\n    const today = new Date(Date.now());\r\n    let day = today.getDate();\r\n    let month = today.getMonth() + 1;\r\n    let year = today.getFullYear();\r\n\r\n    if (day < 6) {\r\n      let mes = mesTotal(month - 2);\r\n      let c = 5 - day;\r\n      let t = mes - c;\r\n      let array1 = [];\r\n      for (let i = 0; i <= c; i++) {\r\n        let a = t + i;\r\n        let b = month - 1;\r\n        if (month - 1 < 10) {\r\n          b = \"0\" + b;\r\n        }\r\n\r\n        array1.push(a + \"/\" + b + \"/\" + year);\r\n      }\r\n\r\n      for (let j = 1; j <= day; j++) {\r\n        array1.push(\"0\" + j + \"/\" + month + \"/\" + year);\r\n      }\r\n\r\n      setFechas(array1);\r\n    }\r\n\r\n    else {\r\n      let c = day - 5;\r\n      let array2 = [];\r\n      for (let i = c; i <= day; i++) {\r\n        array2.push(i + \"/\" + month + \"/\" + year);\r\n      }\r\n      setFechas(array2);\r\n    }\r\n\r\n  }, []);\r\n\r\n  const handleClick = (a) => {\r\n    setOpen(true);\r\n    setTexto(a);\r\n};\r\n\r\n  const handleClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n\r\n\r\n  return (\r\n    <>\r\n      <Snackbar open={open}\r\n        autoHideDuration={6000}\r\n        TransitionComponent={TransitionLeft}\r\n        onClose={(e) => handleClose(e)}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        key={\"top\" + \"center\"}\r\n      >\r\n\r\n        <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n          {texto}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n        <Timeline align=\"right\" className=\"text-white\" style={{ justifyContent: \"center\", padding: \"0\" }}>\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\">\r\n                Today - 9:30 am <br />\r\n                {item.name.first} ha iniciado la tarea 7\r\n          </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color=\"primary\" variant=\"outlined\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n          </TimelineItem>\r\n\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\">\r\n                {fechas[4]}- 12:50 pm <br />\r\n                {item.name.first} ha reportado un error en la tarea 3 (#2)\r\n          </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color=\"primary\" variant=\"outlined\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n          </TimelineItem>\r\n\r\n          <TimelineItem>\r\n            <TimelineOppositeContent>\r\n              <Typography variant=\"body2\">\r\n                {fechas[3]} - 17:15 pm <br />\r\n                {item.name.first} ha terminado la tarea 5\r\n          </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n              <TimelineDot color=\"primary\" variant=\"outlined\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n          </TimelineItem>\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <a className=\"linkPerfil\" onClick={() => handleClick('No implementado en la versi√≥n de prueba')}>Ver m√°s...</a>\r\n          </div>\r\n        </Timeline>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimelinePerfil;","import React from 'react';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nconst Paginacion = ({ postsPerPage, totalPosts, paginate, nextPage, prevPage, currentPage }) => {\r\n    const pageNumbers = [];\r\n    \r\n\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\nif(currentPage>1 && currentPage<pageNumbers.length){\r\n    return (\r\n        \r\n        <nav>\r\n          \r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n           \r\n        </nav>\r\n    );\r\n            }\r\n    else {\r\n        if(currentPage==1){\r\n            return (\r\n        \r\n                <nav>\r\n                    \r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()} disabled><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()}><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            \r\n                </nav>\r\n            );\r\n        }\r\n        else{\r\n            return (        \r\n                <nav>\r\n                     \r\n            <ul className=\"pagination justify-content-center\">\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => prevPage()}><NavigateBeforeIcon /></button>\r\n                </li>\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" style={{height:\"42px\"}}>{currentPage}</button>\r\n                </li>\r\n                {/* {pageNumbers.map(num => (\r\n                    <li className=\"page-item\" key={num}>\r\n                        <button onClick={()btn  => paginate(num)} href=\"\" className=\"page-link\">{num}</button>\r\n                    </li>\r\n                ))} */}\r\n                <li className=\"page-item\">\r\n                    <button className=\"btn page-link\" onClick={() => nextPage()} disabled><NavigateNextIcon /></button>\r\n                </li>\r\n            </ul>\r\n            \r\n                </nav>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport default Paginacion;","import React, { useState, useEffect } from 'react';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Alert } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst TimelineNew = ({ item }) => {\r\n    const [fechas, setFechas] = useState([]);\r\n    const [texto, setTexto] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [checked1, setChecked1] = useState(false);\r\n    const [checked2, setChecked2] = useState(false);\r\n    const [checked3, setChecked3] = useState(false);\r\n\r\n\r\n    const mesTotal = (mesA) => {\r\n        if (mesA === 0 || mesA === 2 || mesA === 4 || mesA === 6 || mesA === 7 || mesA === 9 || mesA === 11) {\r\n            return 31;\r\n        }\r\n        else if (mesA == 3 || mesA == 5 || mesA == 8 || mesA == 10) {\r\n            return 30;\r\n        }\r\n        else {\r\n            return 28;\r\n        }\r\n    }\r\n    const matches = useMediaQuery('(min-width:400px)');\r\n    const matches2 = useMediaQuery('(min-width:330px)');\r\n\r\n    useEffect(() => {\r\n        const today = new Date(Date.now());\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n\r\n        if (day < 6) {\r\n            let mes = mesTotal(month - 2);\r\n            let c = 5 - day;\r\n            let t = mes - c;\r\n            let array1 = [];\r\n            for (let i = 0; i <= c; i++) {\r\n                let a = t + i;\r\n                let b = month - 1;\r\n                if (b < 10) {\r\n                    b = \"0\" + b;\r\n                }\r\n\r\n                array1.push(a + \"/\" + b + \"/\" + year);\r\n            }\r\n\r\n            for (let j = 1; j <= day; j++) {\r\n                let aa = month;\r\n                if (aa < 10) {\r\n                    aa = \"0\" + aa;\r\n                }\r\n                console.log(aa);\r\n                array1.push(\"0\" + j + \"/\" + aa + \"/\" + year);\r\n            }\r\n\r\n            setFechas(array1);\r\n        }\r\n\r\n        else {\r\n            let c = day - 5;\r\n            let array2 = [];\r\n            for (let i = c; i <= day; i++) {\r\n                let aa = month;\r\n                let d = i;\r\n                if (aa < 10) {\r\n                    aa = \"0\" + aa;\r\n                }\r\n                if(d<10){\r\n                    d = \"0\"+d;\r\n                }\r\n\r\n                console.log(aa);\r\n                array2.push(\"0\" + d + \"/\" + aa + \"/\" + year);\r\n            }\r\n            setFechas(array2);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const handleClick = (a) => {\r\n        setOpen(true);\r\n        setTexto(a);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={open}\r\n                autoHideDuration={6000}\r\n                TransitionComponent={TransitionLeft}\r\n                onClose={(e) => handleClose(e)}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                key={\"top\" + \"center\"}\r\n            >\r\n\r\n                <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                    {texto}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <ul className=\"timeline\">\r\n                <li>\r\n                    <div className=\"timeline-time\">\r\n                        <span className=\"date\">today</span>\r\n                        <span className=\"time\">16 :20</span>\r\n                    </div>\r\n                    <div className=\"timeline-icon\">\r\n                        <AddCircleIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\r\n                    </div>\r\n                    <div className=\"timeline-body text-dark\">\r\n                        <div className=\"timeline-header\">\r\n                            <span className=\"userimage\"><img src={item.picture.large} alt=\"\" /></span>\r\n                            <span className=\"username\"><a className=\"linkPerfil\">{item.name.first}</a> <small></small></span>\r\n                        </div>\r\n                        <div className=\"timeline-content\">\r\n                            <h6> He iniciado la tarea #7</h6>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"timeline-footer\">\r\n                            <a className=\"m-r-15 text-inverse-lighter linkPerfil\" onClick={() => setChecked1(!checked1)}><MessageIcon style={{ color: \"#1f8af8\" }} /> Comentar</a>\r\n                        </div>\r\n                        <>\r\n                            {\r\n                                checked1 ?\r\n\r\n                                    <Grow in={checked1}>\r\n                                        <div className=\"timeline-comment-box\">\r\n                                            <div className=\"user\"><img src={item.picture.large} /></div>\r\n                                            <div className=\"input\">\r\n                                                <form action=\"\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-corner\" placeholder=\"Escribe un comentario...\" />\r\n                                                        <span className=\"input-group-btn p-l-10\">\r\n                                                            <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"> <SendIcon /> </button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grow>\r\n                                    :\r\n                                <></>\r\n                            }\r\n                        </>\r\n                    </div>\r\n                </li>\r\n\r\n\r\n\r\n                <li>\r\n                    <div className=\"timeline-time \">\r\n                        <span className=\"date\">{fechas[4]}</span>\r\n                        <span className=\"time\">12:50</span>\r\n                    </div>\r\n                    <div className=\"timeline-icon\">\r\n                        <ReportProblemIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\r\n                    </div>\r\n                    <div className=\"timeline-body text-dark\">\r\n                        <div className=\"timeline-header\">\r\n                            <span className=\"userimage\"><img src={item.picture.large} alt=\"\" /></span>\r\n                            <span className=\"username\"><a className=\"linkPerfil\">{item.name.first}</a> <small></small></span>\r\n                            \r\n                        </div>\r\n                        <div className=\"timeline-content\">\r\n                            <h6> He reportado un error en la tarea #3 (error #5)</h6>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"timeline-footer\">\r\n                            <a className=\"m-r-15 text-inverse-lighter linkPerfil\" onClick={() => setChecked2(!checked2)}><MessageIcon style={{ color: \"#1f8af8\" }} /> Comentar</a>\r\n                        </div>\r\n                        {\r\n                                checked2 ?\r\n\r\n                                    <Grow in={checked2}>\r\n                                        <div className=\"timeline-comment-box\">\r\n                                            <div className=\"user\"><img src={item.picture.large} /></div>\r\n                                            <div className=\"input\">\r\n                                                <form action=\"\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-corner\" placeholder=\"Escribe un comentario...\" />\r\n                                                        <span className=\"input-group-btn p-l-10\">\r\n                                                            <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"> <SendIcon /> </button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grow>\r\n                                    :\r\n                                <></>\r\n                            }\r\n                    </div>\r\n                </li>\r\n{/* \r\n                <li>\r\n                    <div className=\"timeline-time \">\r\n                        <span className=\"date\">{fechas[3]}</span>\r\n                        <span className=\"time\">17:15</span>\r\n                    </div>\r\n                    <div className=\"timeline-icon\">\r\n                        <CheckCircleIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\r\n                    </div>\r\n                    <div className=\"timeline-body text-dark\">\r\n                        <div className=\"timeline-header\">\r\n                            <span className=\"userimage\"><img src={item.picture.large} alt=\"\" /></span>\r\n                            <span className=\"username\"><a className=\"linkPerfil\">{item.name.first}</a> <small></small></span>\r\n                           \r\n                        </div>\r\n                        <div className=\"timeline-content\">\r\n                            <h6> He terminado la tarea #11</h6>\r\n                            <p>\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div className=\"timeline-footer\">\r\n                            <a className=\"m-r-15 text-inverse-lighter linkPerfil\" onClick={() => setChecked3(!checked3)}><MessageIcon style={{ color: \"#1f8af8\" }} /> Comentar</a>\r\n                        </div>\r\n                        {\r\n                                checked3?\r\n\r\n                                    <Grow in={checked3}>\r\n                                        <div className=\"timeline-comment-box\">\r\n                                            <div className=\"user\"><img src={item.picture.large} /></div>\r\n                                            <div className=\"input\">\r\n                                                <form action=\"\">\r\n                                                    <div className=\"input-group\">\r\n                                                        <input type=\"text\" className=\"form-control rounded-corner\" placeholder=\"Escribe un comentario...\" />\r\n                                                        <span className=\"input-group-btn p-l-10\">\r\n                                                            <button class=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\"> <SendIcon /> </button>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Grow>\r\n                                    :\r\n                                <></>\r\n                            }\r\n                    </div>\r\n                </li> */}\r\n            </ul>\r\n            <div style={{ textAlign: \"center\" }}>\r\n            <a className=\"linkPerfil\" onClick={() => handleClick('No implementado en la versi√≥n de prueba')}>Ver m√°s...</a>\r\n          </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TimelineNew;\r\n\r\n\r\n/*\r\n<li>\r\n            <div class=\"timeline-time\">\r\n                <span class=\"date\">yesterday</span>\r\n                <span class=\"time\">20:17</span>\r\n            </div>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                <div class=\"timeline-header\">\r\n                    <span class=\"userimage\"><img src=\"https://bootdey.com/img/Content/avatar/avatar3.png\" alt=\"\" /></span>\r\n                    <span class=\"username\">Sean Ngu</span>\r\n                    <span class=\"pull-right text-muted\">82 Views</span>\r\n                </div>\r\n                <div class=\"timeline-content\">\r\n                    <p>Location: United States</p>\r\n                </div>\r\n                <div class=\"timeline-footer\">\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-thumbs-up fa-fw fa-lg m-r-3\"></i> Like</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-comments fa-fw fa-lg m-r-3\"></i> Comment</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-share fa-fw fa-lg m-r-3\"></i> Share</a>\r\n                </div>\r\n            </div>\r\n\r\n        </li>\r\n        <li>\r\n            <div class=\"timeline-time\">\r\n                <span class=\"date\">24 February 2014</span>\r\n                <span class=\"time\">08:17</span>\r\n            </div>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                <div class=\"timeline-header\">\r\n                    <span class=\"userimage\"><img src=\"https://bootdey.com/img/Content/avatar/avatar3.png\" alt=\"\" /></span>\r\n                    <span class=\"username\">Sean Ngu</span>\r\n                    <span class=\"pull-right text-muted\">1,282 Views</span>\r\n                </div>\r\n                <div class=\"timeline-content\">\r\n                    <p class=\"lead\">\r\n                        <i class=\"fa fa-quote-left fa-fw pull-left\"></i>\r\n                        Quisque sed varius nisl. Nulla facilisi. Phasellus consequat sapien sit amet nibh molestie placerat. Donec nulla quam, ullamcorper ut velit vitae, lobortis condimentum magna. Suspendisse mollis in sem vel mollis.\r\n                        <i class=\"fa fa-quote-right fa-fw pull-right\"></i>\r\n                    </p>\r\n                </div>\r\n                <div class=\"timeline-footer\">\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-thumbs-up fa-fw fa-lg m-r-3\"></i> Like</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-comments fa-fw fa-lg m-r-3\"></i> Comment</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-share fa-fw fa-lg m-r-3\"></i> Share</a>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div class=\"timeline-time\">\r\n                <span class=\"date\">10 January 2014</span>\r\n                <span class=\"time\">20:43</span>\r\n            </div>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                <div class=\"timeline-header\">\r\n                    <span class=\"userimage\"><img src=\"https://bootdey.com/img/Content/avatar/avatar3.png\" alt=\"\" /></span>\r\n                    <span class=\"username\">Sean Ngu</span>\r\n                    <span class=\"pull-right text-muted\">1,021,282 Views</span>\r\n                </div>\r\n                <div class=\"timeline-content\">\r\n                    <h4 class=\"template-title\" >\r\n                        <i class=\"fa fa-map-marker text-danger fa-fw\"></i>\r\n                        795 Folsom Ave, Suite 600 San Francisco, CA 94107\r\n                    </h4>\r\n                    <p>In hac habitasse platea dictumst. Pellentesque bibendum id sem nec faucibus. Maecenas molestie, augue vel accumsan rutrum, massa mi rutrum odio, id luctus mauris nibh ut leo.</p>\r\n                    <p class=\"m-t-20\">\r\n                        <img src=\"../assets/img/gallery/gallery-5.jpg\" alt=\"\" />\r\n                    </p>\r\n                </div>\r\n                <div class=\"timeline-footer\">\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-thumbs-up fa-fw fa-lg m-r-3\"></i> Like</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-comments fa-fw fa-lg m-r-3\"></i> Comment</a>\r\n                    <a href=\"javascript:;\" class=\"m-r-15 text-inverse-lighter\"><i class=\"fa fa-share fa-fw fa-lg m-r-3\"></i> Share</a>\r\n                </div>\r\n            </div>\r\n        </li>\r\n        <li>\r\n            <div class=\"timeline-icon\">\r\n                <a href=\"javascript:;\">&nbsp;</a>\r\n            </div>\r\n            <div class=\"timeline-body\">\r\n                Loading...\r\n             </div>\r\n        </li>\r\n*/","import React, { useEffect, useState } from \"react\";\r\nimport './perfil.css';\r\nimport axios from 'axios';\r\nimport TimelinePerfil from './timeline';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Paginacion from './Paginacion';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from 'react-modal';\r\nimport TimelineNew from \"./TimelineNew\";\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nfunction TransitionLeft(props) {\r\n    return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nModal.setAppElement('#root');\r\nconst Perfil = () => {\r\n\r\n    const { datos } = useParams();\r\n    const [name, setName] = useState('');\r\n    const [web, setWeb] = useState('');\r\n    const [dir, setDir] = useState('');\r\n    const [item, setItem] = useState({});\r\n    const [tipo, setTipo] = useState(0);\r\n    const matches = useMediaQuery('(min-width:550px)');\r\n    const matches2 = useMediaQuery('(min-width:300px)');\r\n    const matche760 = useMediaQuery('(min-width:760px)');\r\n    const [elementos, setElementos] = useState([]);\r\n    const query = Math.round(Math.random() * (15) + 5);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(8);\r\n    const [trab, setTrab] = useState([]);\r\n    const [Load, setLoad] = useState(false);\r\n    const [Load2, setLoad2] = useState(false);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n    const [trabTipo, setTrabTipo] = useState('');\r\n    const [texto, setTexto] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [seedTrab, setSeedTrab] = useState([]);\r\n    let history = useHistory();\r\n\r\n    const getModalStyle = () => {\r\n        const top = '15%';\r\n        const left = '15%'\r\n\r\n        return {\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        modal: {\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: \"transparent\"\r\n        },\r\n        paper: {\r\n            position: 'absolute',\r\n            width: '70%',\r\n            backgroundColor: 'rgb(39, 41, 61)',\r\n            marginLeft: '15%',\r\n            border: 'none',\r\n            marginTop: '5%',\r\n            padding: '0',\r\n            maxHeight: '100%',\r\n            overflow: 'scroll'\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                    let querys = datos.slice(0, datos.length - 1);\r\n                    console.log(querys);\r\n                    const result = await axios(\r\n                        `https://randomuser.me/api/?seed=${querys}`\r\n                    );\r\n                    setItem(result.data.results[0]);\r\n                    let tipoUser = datos.slice(datos.length - 1, datos.length);\r\n                    console.log(tipoUser);\r\n                    setTipo(tipoUser);\r\n                    setName(result.data.results[0].name.first + \" \" + result.data.results[0].name.last);\r\n                    setWeb(result.data.results[0].name.first + result.data.results[0].name.last);\r\n                    setDir(result.data.results[0].location.street.name + \" #\" + result.data.results[0].location.street.number + \", \" + result.data.results[0].location.city + \", \" + result.data.results[0].location.country);\r\n                    setLoad(true);\r\n                    console.log(result.data.results[0]);\r\n            }\r\n            catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchItems();\r\n    }, []);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setTrabTipo(\"Desarrollador/a Full Stack\")\r\n        \r\n        fetchItems2();\r\n    }, []);\r\n\r\n    const handleClick = (a) => {\r\n        setOpen(true);\r\n        setTexto(a);\r\n    };\r\n\r\n    const handleClose = (reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const fetchItems2 = async () => {\r\n        try {\r\n            const result = await axios(\r\n                `https://randomuser.me/api/?results=${query}`\r\n            );\r\n\r\n            const trabajo = [\"Analista\", \"Desarrollador/a full stack\", \"QA tester\", \"Desarrollador/a Backend\", \"Desarrollador/a front end\", \"UX Designer\"];\r\n            setElementos(result.data.results);\r\n\r\n            let tar = [];\r\n            for (let i = 0; i < query; i++) {\r\n                let val = Math.round(Math.random() * (5) + 0);\r\n                tar.push(trabajo[val]);\r\n            }\r\n            setTrab(tar);\r\n            setLoad2(true);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Get current posts\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = elementos.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    const nextPage = () => setCurrentPage(currentPage + 1);\r\n    const prevPage = () => setCurrentPage(currentPage - 1);\r\n\r\n    const handlePerfil = (seed) => {\r\n        fetchItems2();\r\n        setTipo(1);\r\n        setItem(seed);\r\n        setName(seed.name.first + \" \" + seed.name.last);\r\n        setWeb(seed.name.first + seed.name.last);\r\n        setDir(seed.location.street.name + \" #\" + seed.location.street.number + \", \" + seed.location.city + \", \" + seed.location.country);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n\r\n    if (Load && Load2) {\r\n        return (\r\n            <>\r\n                <>\r\n                    <div className=\"main-body\">\r\n\r\n                        <div className=\"row gutters-sm\">\r\n                            <div className=\"col-md-4 mb-3\">\r\n                                <div className=\"card tarjetaPerfil \">\r\n                                    <div className=\"card-body card-body-perfil\">\r\n                                        <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                            {matches2 ?\r\n                                                <img src={item.picture.large} alt=\"Admin\" className=\"rounded-circle\" width=\"150\" />\r\n                                                :\r\n                                                <img src={item.picture.large} alt=\"Admin\" className=\"rounded-circle\" width=\"100\" />\r\n                                            }\r\n                                            <div className=\"mt-3\">\r\n                                                <h4>{name}</h4>\r\n                                                <p className=\"text-secondary mb-1\">{trabTipo}</p>\r\n                                                <p className=\"text-muted font-size-sm\">{item.location.city}, {item.location.country}</p>\r\n                                                {tipo == 1 ?\r\n                                                    <>\r\n                                                        <button className=\"btn btn-primary\" style={{ marginRight: \"2%\" }}>Seguir\r\n                                                    </button> <button className=\"btn btn-outline-primary\">Mensaje</button>\r\n                                                    </>\r\n                                                    :\r\n                                                    <>\r\n                                                        <button className=\"btn btn-primary\" style={{ marginRight: \"2%\" }} disabled>Seguir\r\n                                                    </button> <button className=\"btn btn-outline-primary\" onClick={() => setModalIsOpen(true)}>Editar</button>\r\n                                                    </>\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card tarjetaPerfil mt-3\">\r\n                                    <ul className=\"list-group list-group-flush\">\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-globe mr-2 icon-inline\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"2\" y1=\"12\" x2=\"22\" y2=\"12\"></line><path d=\"M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z\"></path></svg></h6>\r\n                                            {matches2 ?\r\n                                                <span className=\"text-secondary\">https://{item.name.first}.com</span>\r\n                                                :\r\n                                                <span className=\"text-secondary\">{item.name.first}.com</span>\r\n                                            }\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-github mr-2 icon-inline\"><path d=\"M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22\"></path></svg></h6>\r\n                                            <span className=\"text-secondary\">{web}</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-twitter mr-2 icon-inline text-info\"><path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path></svg></h6>\r\n                                            <span className=\"text-secondary\">@{web}</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-instagram mr-2 icon-inline text-danger\"><rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" rx=\"5\" ry=\"5\"></rect><path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path><line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line></svg></h6>\r\n                                            <span className=\"text-secondary\">{web}</span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap listarrss\">\r\n                                            <h6 className=\"mb-0\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-facebook mr-2 icon-inline text-primary\"><path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path></svg></h6>\r\n                                            <span className=\"text-secondary\">{name}</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className=\"card tarjetaPerfil mt-3\">\r\n                                    <div className=\"card-body card-body-perfil\">\r\n                                        {matches2 ?\r\n                                            <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-perfil mr-2\">Tareas:</i> Estado proyecto A</h6>\r\n                                            :\r\n                                            <h6 className=\"d-flex align-items-center mb-3\"><i className=\"material-icons text-perfil mr-2\">Tareas:</i> Proy-A</h6>\r\n                                        }\r\n                                        <small>Backend API</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"88%\" }} aria-valuenow=\"88\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Desarollo Front-end</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"68%\" }} aria-valuenow=\"68\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Cambios solicitados</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"75%\" }} aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Vista Mobile</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"65%\" }} aria-valuenow=\"65\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                        <small>Revision de errores</small>\r\n                                        <div className=\"progress mb-3\" style={{ height: \"5px\" }}>\r\n                                            <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{ width: \"45%\" }} aria-valuenow=\"45\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"col-md-8 peque√±o\">\r\n                                <div className=\"card tarjetaPerfil mb-3\">\r\n                                    <div className=\"card-body card-body-perfil\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Nombre</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {name}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Usuario</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.login.username}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Email</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.email}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Tel√©fono</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.phone}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">M√≥vil</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {item.cell}\r\n                                            </div>\r\n                                        </div>\r\n                                        <hr />\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-sm-3\">\r\n                                                <h6 className=\"mb-0\">Direcci√≥n</h6>\r\n                                            </div>\r\n                                            <div className=\"col-sm-9 text-secondary\">\r\n                                                {dir}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row gutters-sm\">\r\n\r\n                                    <div className=\"col-md-12 peque√±o\">\r\n                                        <div className=\"card tarjetaPerfil mb-3\">\r\n                                            <div className=\"card-body card-body-perfil\">\r\n                                                <ul className=\"nav nav-tabs\" role=\"tablist\">\r\n                                                    <li className=\"nav-item\">\r\n                                                        <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#timeline\">Timeline</a>\r\n                                                    </li>\r\n                                                    <li className=\"nav-item\">\r\n                                                        {matches ?\r\n                                                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#friends\">Colaboradores({elementos.length})</a> :\r\n                                                            <a className=\"nav-link\" data-toggle=\"tab\" href=\"#friends\">Colab.</a>}\r\n                                                    </li>\r\n                                                </ul>\r\n\r\n                                                <div className=\"tab-content\">\r\n                                                    {matches ?\r\n\r\n\r\n\r\n                                                        <div id=\"timeline\" className=\"container-fluid tab-pane active\"><br />\r\n                                                            <TimelineNew item={item} />\r\n                                                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                        :\r\n                                                        <div id=\"timeline\" className=\"container-fluid tab-pane active\" style={{ padding: \"0\" }}><br />\r\n                                                            <TimelinePerfil item={item} />\r\n                                                        </div>\r\n\r\n                                                    }\r\n\r\n                                                    <div id=\"friends\" className=\"container-fluid tab-pane fade\"><br />\r\n                                                        <div className=\"cards mb-2\">\r\n                                                            {currentPosts.map((user, index) => (\r\n                                                                <div key={user.login.uuid} className=\"flip-card\">\r\n                                                                    <div className=\"flip-card-inner\">\r\n                                                                        <div className=\"flip-card-front\">\r\n                                                                            <img src={user.picture.large} alt={user.name.first} />\r\n                                                                        </div>\r\n                                                                        <Tooltip title=\"ir al perfil\">\r\n                                                                            <div className=\"flip-card-back\" onClick={() => handlePerfil(user)}>\r\n                                                                                <p aria-label=\"ir al perfil\" >{user.name.first} {user.name.last}</p>\r\n                                                                                <span style={{ fontSize: \"10px\" }}>{trab[index]}</span>\r\n                                                                            </div>\r\n                                                                        </Tooltip>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                        {elementos.length > 12 ?\r\n                                                            <Paginacion\r\n                                                                postsPerPage={postsPerPage}\r\n                                                                totalPosts={elementos.length}\r\n                                                                paginate={paginate}\r\n                                                                nextPage={nextPage}\r\n                                                                prevPage={prevPage}\r\n                                                                currentPage={currentPage}\r\n                                                            />\r\n                                                            :\r\n                                                            <></>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n\r\n                <Snackbar open={open}\r\n                    autoHideDuration={6000}\r\n                    TransitionComponent={TransitionLeft}\r\n                    onClose={(e) => handleClose(e)}\r\n                    anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                    key={\"top\" + \"center\"}\r\n                >\r\n\r\n                    <Alert onClose={(e) => handleClose(e)} severity=\"error\">\r\n                        {texto}\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n\r\n\r\n\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    shouldCloseOnEsc={true}\r\n                    shouldCloseOnOverlayClick={false}\r\n                    className={classes.modal}\r\n                >\r\n                    <div className={`${classes.paper} mt-3`}>\r\n                        <header>\r\n                            <button className='btn btn-danger boton' onClick={() => setModalIsOpen(false)}>X</button>\r\n                            <h2 className=\"h1T mt-5 ml-5\">Editar</h2>\r\n                        </header>\r\n                        <main>\r\n                            <div className=\"row texto ml-5\" style={{ width: \"100%\" }}>\r\n                                <div class=\"col-md-4 col-xl-3\">\r\n                                    <div class=\"profile-img\">\r\n                                        <img src={item.picture.large} alt=\"Admin\" />\r\n                                        <div class=\"file btn btn-lg btn-primary\">\r\n                                            Change Photo\r\n                                <input type=\"file\" name=\"file\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-6 col-xl-9 mt-3\">\r\n\r\n                                    <div className=\"row texto\">\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}name`}>Nombre: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={`${item.name.first} ${item.name.last}`} id={`${item.login.uuid}name`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}user`}>Usuario: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={item.login.username} id={`${item.login.uuid}user`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}pass`}>Contrase√±a: </label>\r\n                                            <input type=\"password\" className=\"form-control\" value={item.login.password} id={`${item.login.uuid}pass`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}prof`}>Profesi√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={trabTipo} id={`${item.login.uuid}prof`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}mail`}>Mail: </label>\r\n                                            <input type=\"email\" className=\"form-control\" value={item.email} id={`${item.login.uuid}mail`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}phone`}>Tel√©fono: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={item.phone} id={`${item.login.uuid}phone`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}movil`}>M√≥vil: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={item.cell} id={`${item.login.uuid}movil`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 mt-3\">\r\n                                            <label for={`${item.login.uuid}dirr`}>Direcci√≥n: </label>\r\n                                            <input type=\"text\" className=\"form-control\" value={dir} id={`${item.login.uuid}dirr`} disabled style={{ background: \"transparent\", color: \"white\" }}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {matche760 ?\r\n                                <div className={classes.paper} className=\"row mb-2\">\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-danger mt-3 mb-5\" style={{ float: \"left\", marginLeft: \"10%\", visibility: \"hidden\" }}></button>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 mt-3\">\r\n                                        <button className=\"btn btn-success boton mt-5 mr-5\" onClick={() => { handleClick('No implementado en la versi√≥n de prueba'); setModalIsOpen(false) }}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div className={classes.paper} className=\"row mb-3\">\r\n                                    <div className=\"col-md-12 mt-3\">\r\n                                        <button className=\"btn btn-success boton\" onClick={() => { handleClick('No implementado en la versi√≥n de prueba'); setModalIsOpen(false) }}>Guardar Cambios</button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </main>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"contenedor center\" >\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Perfil","import {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport poppers from \"popper.js\";\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport './App.css';\nimport Layout from './sideNab';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home/Home';\nimport ListaCliente from './Components/cliente/ListaCliente';\nimport ListaProveedor from './Components/Proveedor/ListaProveedor';\nimport ListaTrabajadores from './Components/Trabajadores/ListaTrabajadores';\nimport Venta from './Components/TransVentas/Venta';\nimport Compra from './Components/TransCompras/Compra';\nimport ProdBase from './Components/Productos/ProdBase';\nimport ReporteVenta from './Components/ReporteVenta/ReporteVenta';\nimport ReporteCompra from './Components/Reportes/ReporteCompra';\nimport ReporteCliente from './Components/Reportes/ReporteCliente';\nimport ReporteProductos from './Components/Reportes/ReporteProductos';\nimport Login from './Components/Login/Login';\nimport Perfil from './Components/perfil/Perfil';\n\nfunction App() {\n  \n  return (\n    <BrowserRouter basename= {process.env.PUBLIC_URL}>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/home/:datos\" >\n            <Home />\n          </Route>\n          <Route exact path=\"/\" >\n            <Login />\n          </Route>\n          <Route path=\"/contactos/proveedor/:datos\" >\n            <ListaProveedor />\n          </Route>\n          <Route path=\"/contactos/cliente/:datos\" >\n            <ListaCliente />\n          </Route>\n          <Route path=\"/contactos/trabajador/:datos\" >\n            <ListaTrabajadores />\n          </Route>\n          <Route path=\"/transaccion/ventas/:datos\" >\n            <Venta />\n          </Route>\n          <Route path=\"/transaccion/compras/:datos\" >\n            <Compra />\n          </Route>\n          <Route path=\"/productos/:datos\" >\n            <ProdBase />\n          </Route>\n          <Route path=\"/reportes/venta\" >\n            <ReporteVenta />\n          </Route>\n          <Route path=\"/reportes/compra\" >\n            <ReporteCompra />\n          </Route>\n          <Route path=\"/reportes/clientes\" >\n            <ReporteCliente />\n          </Route>\n          <Route path=\"/reportes/productos\" >\n            <ReporteProductos />\n          </Route>\n          <Route path=\"/perfil/:datos\" >\n            <Perfil />\n          </Route>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}